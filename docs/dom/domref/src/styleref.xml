<chapter>
<title>DOM Style Reference</title>
<Body>
To ADD: using element.setAttribute(&quot;style&quot;, &quot;background-color: blue;&quot;) will remove any existing style properties on the element, so it's considered dangerous.</Body>
<Body>
</Body>
<Body>
This chapter describes the <Code>
style</Code>
objects and the various interfaces they make available for manipulating style rules for HTML and XML documents. The final section, <Bold>
DOM CSS Properties List</Bold>
, is a list of the style properties that can be set or returned with the <Code>
element.style</Code>
property.</Body>
<ListBulletList>
<ListBullet>
<Bold>
DOM Style Object</Bold>
</ListBullet>
<ListBullet>
<Bold>
DOM styleSheet Object</Bold>
</ListBullet>
<ListBullet>
<Bold>
DOM cssRule Object</Bold>
</ListBullet>
<ListBullet>
<Bold>
DOM CSS Properties List</Bold>
</ListBullet>
</ListBulletList>
<Body>
The basic <Code>
style</Code>
object exposes the <Code>
StyleSheet</Code>
and the <Code>
CSSStyleSheet</Code>
interfaces from the DOM Level 2 Events specification. Those interfaces contain members like <Code>
insertRule</Code>
, <Code>
selectorText</Code>
, and <Code>
parentStyleSheet</Code>
for accessing and manipulating the individual style rules that make up a CSS stylesheet.</Body>
<Body>
To get to the <Code>
style</Code>
objects from the <Code>
document</Code>
, you can use the <Code>
document.styleSheets</Code>
property and access the individual objects by index (e.g., <Code>
document.styleSheets[0]</Code>
is the first stylesheet defined for the document, etc.). Though there are various syntaxes for expressing stylesheets for a document, Netscape supports CSS exclusively, so the <Code>
style</Code>
object retrieved from this array implements both the StyleSheet and CSSStyleSheet interfaces.</Body>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
ss = document.styleSheets[1];</Code>
<Code>
ss.cssRules[0].style.backgroundColor=&quot;blue&quot;;</Code>
</CELL>
</ROW>
</TABLE>
<Body>
The list of properties available in the DOM from the style property is given in the <Bold>
DOM CSS Properties List</Bold>
section below.</Body>
<Body>
The element <Bold>
style</Bold>
property can also be used to get the styles on an element. However, this property only returns style attributes that have been set in-line (e.g, <Code>
&lt;td style=Å‚Äùbackground-color: lightblueÅ‚Äù&gt;</Code>
returns the string Å‚Äúbackground-color:lightblue,Å‚Äù though there may be other styles on the element from a stylesheet). Also, when you set this property on an element, you override and erase any styles that have set elsewhere.</Body>
<Body>
Instead, the <Code>
getComputedStyle()</Code>
method on the <Code>
document.defaultView</Code>
object returns all styles that have actually been computerd for an element. See <Bold>
Example 6: getComputedStyle</Bold>
in the examples chapter for more information on how to use this method.</Body>
<Heading1>
DOM 
Style Object</Heading1>
<Body>
The <Code>
style</Code>
object represents an individual style statement. Unlike the individual rules available from the<Code>
document.styleSheets</Code>
array, the style object is accessed from the <Code>
document</Code>
or from the elements to which that style is applied. It represents the in-line styles on a particular element.</Body>
<Body>
More important than the two properties surfaced here is the use of the <Code>
style</Code>
object in the following sorts of manipulations, where the style object can be used to set individual style properties on an element:</Body>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
&lt;html&gt;</CellCode>
<CellCode>
&lt;head&gt;</CellCode>
<CellCode>
&lt;link rel=&quot;StyleSheet&quot; href=&quot;example.css&quot;/&gt;</CellCode>
<CellCode>
&lt;script&gt;</CellCode>
<CellCode>
function stilo() {</CellCode>
<CellCode>
document.getElementById(&quot;d&quot;).
style.color = &quot;orange&quot;;</CellCode>
<CellCode>
}</CellCode>
<CellCode>
&lt;/script&gt;</CellCode>
<CellCode>
&lt;/head&gt;</CellCode>
<CellCode>
</CellCode>
<CellCode>
&lt;body&gt;</CellCode>
<CellCode>
&lt;div id=&quot;d&quot; class=&quot;thunder&quot;&gt;Thunder&lt;/div&gt;</CellCode>
<CellCode>
&lt;button onclick=&quot;stilo()&quot;&gt;ss&lt;/button&gt;</CellCode>
<CellCode>
&lt;/body&gt;</CellCode>
<CellCode>
&lt;/html&gt;</CellCode>
<CellCode>
</CellCode>
</CELL>
</ROW>
</TABLE>
<Body>
The media and type of the style may or may not be given. Note that you can also change styles on an element by getting a reference to that element and then using the setAttribute() DOM method to specify both the CSS property and its value.</Body>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
el = document.getElementById(Å‚Äúsome-elementÅ‚Äù);</Code>
<Code>
el.setAttribute(Å‚ÄústyleÅ‚Äù, Å‚Äúbackground-color:darkblue;Å‚Äù);</Code>
</CELL>
</ROW>
</TABLE>
<Body>
Be aware, however, that when you set the style attribute in this way, you are overwriting whatever style properties may already have been defined in the style attribute. If the document referenced in the snippet above by the id Å‚Äúsome-elementÅ‚Äù has a <Code>
style</Code>
attribute in which the font size is set to <Code>
18px,</Code>
for example, that information is erased when the style attribute is manipulated in this crude way.</Body>
<Head2>
Properties</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
media</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Specifies the intended destination medium for style information.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
type</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Returns the type of style being applied by this statement.</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head1>
media</Head1>
<Body>
media specifies the intended destination medium for style information.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
medium = style.media</Code>
<Code>
style.media = medium</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
medium</Code>
is a string describing a single medium or a comma-separated list.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
example here</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The default value for media is Å‚Äúscreen.Å‚Äù</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 Styles - <Code>
STYLE</Code>
</Body>
<Body>
</Body>
<Head1>
type</Head1>
<Body>
Returns the type of the current style.</Body>
<Head3>
Syntax</Head3>
<Code>
type = style.type</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
type</Code>
is a sting containing the type.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
if ( newStyle.type != Å‚Äútext/cssÅ‚Äù ){</Code>
<Code>
// not supported!</Code>
<Code>
warnCSS();</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
For Gecko, the type is most often given as Å‚Äútext/css.Å‚Äù</Body>
<Body>
From the W3C spec on CSS: Å‚ÄúThe expectation is that binding-specific casting methods can be used to cast down from an instance of the <Code>
CSSRule</Code>
interface to the specific derived interface implied by the type.Å‚Äù</Body>
<Head3>
Specification</Head3>
<Body>
link to DOM spec here</Body>
<Body>
</Body>
<Heading1>
DOM 
styleSheet Object</Heading1>
<Body>
The stylesheet object represents the stylesheet itself. A stylesheet contains any number of separate rules, which can be manipulated with the <Code>
cssRule</Code>
(see <Code>
<Bold>
DOM cssRule Object</Bold>
<Code>
</Code>
</Code>
below).</Body>
<Body>
Using the <Code>
stylesheet</Code>
object, you can add and delete style rules. You can also travel the hierarchy of stylesheets that can be associated with a particular document using the <Bold>
parentStyleSheet</Bold>
property.</Body>
<Body>
</Body>
<Head2>
Properties</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
cssRules</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Returns all of the CSS rules in the stylesheet as an array.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
disabled</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
This property indicates whether the current stylesheet has been applied or not.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
href</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Returns the location of the stylesheet.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
media</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Specifies the intended destination medium for style information.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
ownerNode</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Returns the node that associates this style sheet with the document.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
ownerRule</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
If this style sheet comes from an <Code>
@import</Code>
rule, the ownerRule property will contain the CSSImportRule.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
parentStyleSheet</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Returns the stylesheet that is including this one, if any.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
title</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Returns the advisory title of the current style sheet.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
type</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Specifies the style sheet language for this style sheet. </CellBody>
</CELL>
</ROW>
</TABLE>
<Head2>
Methods</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
deleteRule</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Deletes a rule from the stylesheet.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
insertRule</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Inserts a new style rule into the current style sheet.</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head1>
cssRules</Head1>
<Body>
Returns all of the CSS rules in the stylesheet as an array.</Body>
<Head3>
Syntax</Head3>
<Code>
rules = stylesheet.cssRules</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
rules</Code>
is an array of individual <Code>
cssRule</Code>
objects.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
// get to the first rule</CellCode>
<CellCode>
first_rule = document.styleSheets[0].cssRules[0];</CellCode>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
See <Bold>
DOM cssRule Object</Bold>
.</Body>
<Head3>
Specification</Head3>
<Body>
<Code>
cssRule</Code>
</Body>
<Body>
</Body>
<Head1>
disabled</Head1>
<Body>
This property indicates whether the current stylesheet is applied or not.</Body>
<Head3>
Syntax</Head3>
<Code>
res = stylesheet.disabled</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
res</Code>
is a boolean True or False</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
// if the stylesheet is applied...</CellCode>
<CellCode>
if (stylesheet.disabled) {</CellCode>
<CellCode>
// apply style in-line</CellCode>
<CellCode>
}</CellCode>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Code>
disabled</Code>
<Body>
</Body>
<Head1>
href</Head1>
<Body>
Returns the location of the stylesheet.</Body>
<Head3>
Syntax</Head3>
<Code>
href = stylesheet.href</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
href</Code>
is a string containing the URI of the stylesheet.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
// on a local machine:</Code>
<Code>
&lt;html&gt;</Code>
<Code>
&lt;head&gt;</Code>
<Code>
&lt;link rel=&quot;StyleSheet&quot; href=&quot;example.css&quot; type=&quot;text/css&quot; /&gt;</Code>
<Code>
&lt;script&gt;</Code>
<Code>
function sref() {</Code>
<Code>
alert(document.styleSheets[0].href);</Code>
<Code>
}</Code>
<Code>
&lt;/script&gt;</Code>
<Code>
&lt;/head&gt;</Code>
<Code>
</Code>
<Code>
&lt;body&gt;</Code>
<Code>
&lt;div class=&quot;thunder&quot;&gt;Thunder&lt;/div&gt;</Code>
<Code>
&lt;button onclick=&quot;sref()&quot;&gt;ss&lt;/button&gt;</Code>
<Code>
&lt;/body&gt;</Code>
<Code>
&lt;/html&gt;</Code>
<Code>
</Code>
<Code>
// returns Å‚Äúfile:////C:/Windows/Desktop/example.css</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
If the style sheet is a linked style sheet, the value of its attribute is its location. For inline style sheets, the value of this attribute is <Code>
NULL</Code>
. </Body>
<Head3>
Specification</Head3>
<Code>
href</Code>
<Body>
</Body>
<Head1>
media</Head1>
<Body>
media specifies the intended destination medium for style information.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
medium = stylesheet.media</Code>
<Code>
stylesheet.media = medium</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
medium</Code>
is a string describing a single medium or a comma-separated list.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
&lt;link rel=&quot;StyleSheet&quot; </Code>
<Code>
href=&quot;document.css&quot; </Code>
<Code>
type=&quot;text/css&quot; </Code>
<Code>
media=&quot;screen&quot; /&gt;</Code>
<Code>
</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The default value for media is Å‚Äúscreen.Å‚Äù</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 Styles - <Code>
STYLESHEET</Code>
</Body>
<Body>
</Body>
<Head1>
ownerNode</Head1>
<Body>
ownerNode returns the node that associates this style sheet with the document.</Body>
<Head3>
Syntax</Head3>
<Code>
node = stylesheet.ownerNode</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
node</Code>
is an object reference to the element that brings in the stylesheet.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
&lt;html&gt;</Code>
<Code>
&lt;head&gt;</Code>
<Code>
&lt;link rel=&quot;StyleSheet&quot; href=&quot;example.css&quot; type=&quot;text/css&quot; /&gt;</Code>
<Code>
&lt;script&gt;</Code>
<Code>
function stilo() {</Code>
<Code>
alert(document.styleSheets[0].ownerNode);</Code>
<Code>
}</Code>
<Code>
&lt;/script&gt;</Code>
<Code>
&lt;/head&gt;</Code>
<Code>
</Code>
<Code>
&lt;body&gt;</Code>
<Code>
&lt;div class=&quot;thunder&quot;&gt;Thunder&lt;/div&gt;</Code>
<Code>
&lt;button onclick=&quot;stilo()&quot;&gt;ss&lt;/button&gt;</Code>
<Code>
&lt;/body&gt;</Code>
<Code>
&lt;/html&gt;</Code>
<Code>
// displays Å‚Äúobject HTMLLinkElementÅ‚Äù</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
For HTML, ownerNode may be the corresponding <Code>
LINK</Code>
or <Code>
STYLE</Code>
element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is <Code>
null</Code>
.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 Styles - <Code>
STYLESHEET</Code>
</Body>
<Body>
</Body>
<Head1>
ownerRule</Head1>
<Body>
If this style sheet comes from an <Code>
@import</Code>
rule, the ownerRule property will contain the CSSImportRule.</Body>
<Head3>
Syntax</Head3>
<Code>
rule = stylesheet.ownerRule</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
rule</Code>
is a string containing the importing rule in the HTML or XML document</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
// example here</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
Note that if the value of the ownerNode property on the current <Code>
STYLE</Code>
element is <Code>
NULL</Code>
, then then ownerRule returns the rule that blah. And vice versa.</Body>
<Head3>
Specification</Head3>
<Code>
ownerRule</Code>
<Body>
</Body>
<Head1>
parentStyleSheet</Head1>
<Body>
Returns the stylesheet that is including this one, if any.</Body>
<Head3>
Syntax</Head3>
<Code>
parent = stylesheet.parentStyleSheet</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
parent</Code>
is an object reference</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
// find the top level stylesheet</Code>
<Code>
if (stylesheet.parentStyleSheet) {</Code>
<Code>
sheet = stylesheet.parentStyleSheet;</Code>
<Code>
} else { sheet = stylesheet; }</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
This property returns <Code>
NULL</Code>
is the current stylesheet is a top-level stylesheet or if stylesheeet inclusion is not supported.</Body>
<Head3>
Specification</Head3>
<Code>
parentStyleSheet</Code>
<Body>
</Body>
<Head1>
title</Head1>
<Body>
title returns the advisory title of the current style sheet.</Body>
<Head3>
Syntax</Head3>
<Code>
line of code</Code>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
// example here</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The title is often specified in the ownerNode.</Body>
<Head3>
Specification</Head3>
<Code>
title</Code>
<Body>
</Body>
<Head1>
type</Head1>
<Body>
type specifies the style sheet language for this style sheet. </Body>
<Head3>
Syntax</Head3>
<Code>
type = stylesheet.type</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
type</Code>
is a string.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
ss.type = Å‚Äútext/cssÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Code>
type</Code>
<Body>
</Body>
<Head1>
deleteRule</Head1>
<Body>
The deleteRule method removes a style rule from the current style sheet object.</Body>
<Head3>
Syntax</Head3>
<Code>
stylesheet.deleteRule(index)</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
index</Code>
is a long number representing the position of the rule</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
myStyles.deleteRule(0);</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Code>
deleteRule</Code>
<Body>
</Body>
<Head1>
insertRule</Head1>
<Body>
The insertRule method inserts a new style rule into the current style sheet.</Body>
<Head3>
Syntax</Head3>
<Code>
stylesheet.insertRule(rule, index)</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
rule</Code>
is a string containing the rule to be inserted (selector and declaration)</Indent>
<Indent>
<Code>
index</Code>
is a number representing the position to be inserted</Indent>
<Head3>
Example</Head3>
<Body>
</Body>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
// push a new rule onto the top of my stylesheet</Code>
<Code>
myStyle.insertRule(Å‚Äú#blanc { color: white }Å‚Äù, 0);</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
For rule sets this contains both the selector and the style declaration. For at-rules, this specifies both the at-identifier and the rule content.</Body>
<Head3>
Specification</Head3>
<Code>
insertRule</Code>
<Body>
</Body>
<Body>
</Body>
<Heading1>
DOM 
cssRule Object</Heading1>
<Body>
The <Code>
cssRule</Code>
object represents a single CSS style rule. These rules may be a part of a stylesheet or they may be placed in-line with the individual nodes in the HTML or XML document. Each stylesheet object exposes an array of the cssRules that make it up, and you can also get to the rules on individual elements by using the <Code>
element.style</Code>
property.</Body>
<Head2>
Properties</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
cssText</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
cssText returns the actual text of the style rule.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
parentStyleSheet</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
parentStyleSheet returns the stylesheet object in which the current rule is defined.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
selectorText</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
selectorText gets/sets the textual representation of the selector for the rule set. </CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
style</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
style returns the declaration block for the current style.</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head1>
cssText</Head1>
<Body>
cssText returns the actual text of the style rule.</Body>
<Head3>
Syntax</Head3>
<Code>
text = cssRule.cssText</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
text</Code>
is a string containing the style rule text.</Indent>
<Head3>
Example</Head3>
<Body>
</Body>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
if ( myRule.cssText.indexOf(Å‚Äúbackground-colorÅ‚Äù) != -1 ) {</Code>
<Code>
bgRule = myRule;</Code>
<Code>
}</Code>
<Code>
...</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 Style - <Code>
cssRule</Code>
</Body>
<Body>
</Body>
<Head1>
parentStyleSheet</Head1>
<Body>
parentStyleSheet returns the stylesheet object in which the current rule is defined.</Body>
<Head3>
Syntax</Head3>
<Code>
stylesheet = cssRule.parentStyleSheet</Code>
<Head3>
Parameters</Head3>
<Indent>
stylesheet is a <Code>
stylesheet</Code>
object</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
if ( bgRule.parentStyleSheet != mySheet ) {</Code>
<Code>
// alien style rule!</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
See <Bold>
DOM styleSheet Object</Bold>
for more information about the <Code>
stylesheet</Code>
object interface.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 Style - <Code>
cssRule</Code>
</Body>
<Body>
</Body>
<Head1>
selectorText</Head1>
<Body>
selectorText gets/sets the textual representation of the selector for the rule set. </Body>
<Head3>
Syntax</Head3>
<Code>
text = cssRule.selectorText</Code>
<Code>
cssRule.selectorText = text</Code>
<Head3>
Parameters</Head3>
<Indent>
text is a string containing the text of the selector.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
// for cssrule: body { background-color: darkblue; }</Code>
<Code>
cssrule = document.styleSheets[1] XXX.</Code>
<Code>
selector = cssrule.selectorText;</Code>
<Code>
// selector is now Å‚ÄúbodyÅ‚Äù</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The implementation may have stripped out insignificant whitespace while parsing the selector.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 Style - <Code>
cssRule</Code>
</Body>
<Body>
</Body>
<Head1>
style</Head1>
<Body>
style returns the declaration block for the current style.</Body>
<Head3>
Syntax</Head3>
<Code>
styleObj = cssRule.style</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
styleObj</Code>
is an object reference to the style declaration<Code>
</Code>
</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
function stilo() {</Code>
<Code>
alert(document.styleSheets[0].
cssRules[0].style.cssText);</Code>
<Code>
}</Code>
<Code>
// displays Å‚Äúbackground-color: gray;Å‚Äù</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The declaration block is that part of the style rule that appears within the braces and that actually provides the style definitions (for the selector, the part that comes before the braces).</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 Style - <Code>
cssRule</Code>
</Body>
<Heading1>
DOM CSS Properties List</Heading1>
<Body>
The following is a list of the CSS properties that are supported in the Netscape 6 DOM and accessible by means of the <Code>
style</Code>
property on elements.</Body>
<Body>
The following complete document examples shows the typical use of the <Code>
element.style</Code>
property to get and set the CSS properties listed here:</Body>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
&lt;html&gt;</Code>
<Code>
&lt;head&gt;</Code>
<Code>
&lt;script&gt;</Code>
<Code>
function changeStyle()  {</Code>
<Code>
c = document.getElementById(&quot;tid&quot;);</Code>
<Code>
c.style = &quot;padding right: 20px&quot;;</Code>
<Code>
}</Code>
<Code>
&lt;/script&gt;</Code>
<Code>
&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;</Code>
<Code>
&lt;td id=&quot;tid&quot;&gt;Example Cell&lt;/td&gt;&lt;/tr&gt;</Code>
<Code>
&lt;/table&gt;</Code>
<Code>
&lt;form&gt;</Code>
<Code>
&lt;input value=&quot;addpad&quot; 
type=&quot;button&quot; 
onclick=&quot;changeStyle();&quot; /&gt;</Code>
<Code>
&lt;/form&gt;</Code>
<Code>
&lt;/html&gt;</Code>
</CELL>
</ROW>
</TABLE>
<BodyKeepNext>
Styles can be returned or set with the <Code>
style</Code>
property and these attributes but that you cannot set values directly using constructions such as <Code>
style=Å‚Äùbackground-color: blueÅ‚Äù</Code>
from the DOM, where the value is a string that contains both the attribute and the value you wish to set. By itself, the <Code>
style</Code>
property should only be used as a Å‚ÄúgetterÅ‚Äù and not a Å‚Äúsetter.Å‚Äù In other words, the first of the following two constructions is bad, and the latter is better practice in the DOM:</BodyKeepNext>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
bad: element.style = Å‚Äúbackground-color: blueÅ‚Äù;</CellCode>
<CellCode>
</CellCode>
<CellCode>
good: element.style.backgroundColor = Å‚ÄúblueÅ‚Äù;</CellCode>
</CELL>
</ROW>
</TABLE>
<Body>
Note that the bad example above may actually set the background color of the given element, but this assignment overwrites any style information that already existed on that element, and then cannot be added to or updated without other overwrites. The special style attributes available off of the elementÅ‚Äôs style property allow you to Å‚ÄúmanageÅ‚Äù the style of your elements in a safer and more organized way.</Body>
<Body>
See also: the Element <Bold>
style</Bold>
property.</Body>
<BodyKeepNext>
You can check the syntax for the values of these attributes by consulting the DOM CSS specification.</BodyKeepNext>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
accelerator	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
font	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
pause	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
azimuth</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
fontFamily</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
pauseAfter</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
background</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
fontSize	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
pauseBefore</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
backgroundAttachment</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
fontSizeAdjust	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
pitch	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
backgroundColor</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
fontStretch	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
pitchRange</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
backgroundImage	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
fontStyle	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
playDuring</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
backgroundPosition</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
fontVariant	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
position	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
backgroundRepeat	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
fontWeight	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
quotes	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
border</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
height	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
richness</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderBottom</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
left	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
right	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderBottomColor</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
length	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
size	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderBottomStyle</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
letterSpacing</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
speak	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderBottomWidth</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
lineHeight	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
speakHeader</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderCollapse</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
listStyle	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
speakNumeral</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderColor	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
listStyleImage	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
speakPunctuation</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderLeft	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
listStylePosition</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
speechRate	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderLeftColor	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
listStyleType	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
stress	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderLeftStyle	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
margin	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
tableLayout	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderLeftWidth	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
marginBottom</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
textAlign	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderRight	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
marginLeft	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
textDecoration	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderRightColor</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
marginRight	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
textIndent	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderRightStyle</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
marginTop	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
textShadow	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderRightWidth</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
markerOffset	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
textTransform	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderSpacing	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
marks	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
top</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderStyle	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
maxHeight</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
unicodeBidi</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderTop	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
maxWidth	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
verticalAlign</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderTopColor	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
minHeight	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
visibility	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderTopStyle	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
minWidth	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
voiceFamily	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderTopWidth	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
MozBinding	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
volume	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
borderWidth	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
MozOpacity	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
whiteSpace</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
bottom	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
orphans	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
widows	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
captionSide</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
outline	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
width	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
clear</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
outlineColor</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
wordSpacing	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
clip	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
outlineStyle</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
zIndex	</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
color	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
outlineWidth</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
content	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
overflow	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
counterIncrement</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
padding	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
counterReset	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
paddingBottom	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
cssFloat	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
paddingLeft	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
cssText	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
paddingRight	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
cue	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
paddingTop	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
cueAfter</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
page	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
cueBefore</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
pageBreakAfter	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
cursor	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
pageBreakBefore	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
direction</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
pageBreakInside	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
display	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
parentRule	</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
elevation</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
emptyCells</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head3>
DOM Frame Reference</Head3>
<Body>
This document contains reference information for the following DOM objects:</Body>
<BulletedList>
<Bulleted>
<Bold>
FRAMESET</Bold>
</Bulleted>
<Bulleted>
<Bold>
FRAME</Bold>
</Bulleted>
<Bulleted>
<Bold>
IFRAME</Bold>
</Bulleted>
</BulletedList>
<Head1>
FRAMESET</Head1>
<Body>
The <Code>
FRAMESET</Code>
element is a structure for containing subframes in HTML. It manages <Code>
FRAME</Code>
elements but not <Code>
IFRAMES</Code>
, which are inserted Å‚Äúin-lineÅ‚Äù into the document. In HTML, a frameset takes the following basic structure:</Body>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
&lt;frameset&gt;</Code>
<Code>
&lt;frame src=Å‚Äùsome_doc.htmlÅ‚Äù id=Å‚Äùframe1Å‚Äù /&gt;</Code>
<Code>
&lt;frame src=Å‚Äùother_doc.htmlÅ‚Äù /&gt;</Code>
<Code>
&lt;/frameset&gt;</Code>
</CELL>
</ROW>
</TABLE>
<Body>
The DOM <Code>
frameset</Code>
object provides minimal programmatic access to the FRAMESET HTML element. Its interface--the two optional properties cols and rows--are a way to indicate the dimensions of the frame set, how many subframes it manages. Note that the <Code>
frameset</Code>
object does not provide interfaces for getting to the subframes it manages. </Body>
<Body>
To get the frames in a document, you must ask the document itself, using the <Code>
document.getElementById()</Code>
method and the id of the frame(s) you want, or the <Code>
document.getElementsByTagName(Å‚ÄúFRAMEÅ‚Äù)</Code>
, which returns a <Code>
NamedNodeList</Code>
array:</Body>
<Body>
</Body>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f1 = document.getElementById(Å‚Äúframe1Å‚Äù);</Code>
<Code>
alert(f1.src); // print the src of the first frame</Code>
<Code>
</Code>
<Code>
frames = document.getElementsByTagName(Å‚ÄúFRAMEÅ‚Äù);</Code>
<Code>
for (var i = 0; i &lt; frames.length; i++) {</Code>
<Code>
// do something with each frame as frames[i]</Code>
<Code>
</Code>
<Code>
}</Code>
<Code>
</Code>
</CELL>
</ROW>
</TABLE>
<Head2>
Properties</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
cols</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
This property sets or returns the size of the columns of frames in the frameset..</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
rows</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
This property sets or returns the number of rows of frames in the frameset.</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head1>
cols
</Head1>
<Body>
This property sets or returns the size of the columns of frames in the frameset.</Body>
<Head3>
Syntax</Head3>
<Code>
cols = frameSetElement.cols</Code>
<Code>
frameSetElement.cols = cols</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
cols</Code>
is the size of columns in the frameset as a comma-separated list.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
// element in HTML: &lt;frameset id=Å‚ÄùfsetÅ‚Äù &gt;</Code>
<Code>
fs = document.getElementById(Å‚ÄúfsetÅ‚Äù);</Code>
<Code>
fs.cols = &quot;200, *&quot;; // two columns of frames, first 200px</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The cols and rows properties are often used together to lay out the dimensions of a frameset in HTML. If these are not specified, then the frameset simply counts the number of frames it manages. The number of values in the cols attribute determines how many frames there are; the Å‚Äú*Å‚Äù specifies that the column take up all of the remaining space.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameSetElement</Code>
</Body>
<Body>
</Body>
<Head1>
rows</Head1>
<Body>
This property sets or returns the number of rows of frames in the frameset.</Body>
<Head3>
Syntax</Head3>
<Code>
rows = frameSetElement.rows</Code>
<Code>
frameSetElement.rows = rows</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
rows</Code>
is the number of rows in the frameset.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
// element in HTML: &lt;frameset id=Å‚ÄùfsetÅ‚Äù &gt;</Code>
<Code>
fs = document.getElementById(Å‚ÄúfsetÅ‚Äù);</Code>
<Code>
fs.rows = 8; // eight rows of frames</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The cols and rows properties are often used together to lay out the dimensions of a frameset in HTML. If these are not specified, then the frameset simply counts the number of frames it manages. For example, if you have a frameset like the one below, then blah blah...</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameSetElement</Code>
</Body>
<Body>
</Body>
<Body>
</Body>
<Head1>
FRAME</Head1>
<Body>
The <Code>
frame</Code>
object provides methods and properties for manipulating the HTML <Code>
FRAME</Code>
element. While many of the properties (e.g., frameBorder, marginWidth) handle the <Code>
FRAME</Code>
itself, the contentDocument property allows you to get the actual document contained in the subframe, which can then be futher manipulated.</Body>
<Head2>
Properties</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
contentDocument</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
The contentDocument property returns the document the frame contains, if any.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
contentWindow</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
The <Code>
contentWindow</Code>
property returns the window object for the frame.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
frameBorder</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<Code>
frameBorder</Code>
gets/sets the border around the current frame.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
longDesc</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
The longDesc property specifies a url for a longer description of the contents of the current frame.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
marginHeight</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Gets/sets the height of the frameÅ‚Äôs margin in pixels.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
marginWidth</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Gets/sets the width of the frameÅ‚Äôs margin in pixels.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
name</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
The name of the frame element.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
noResize</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Gets/sets whether the user can resize the current frame.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
scrolling</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
The scrolling property specifies whether the current frame should provide scrollbars or not.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
src</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
The src property provides a url to load as content into the current frame.</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head1>
contentDocument</Head1>
<Body>
The <Code>
contentDocument</Code>
property returns the document the frame contains, if any.</Body>
<Head3>
Syntax</Head3>
<Code>
document = frameElement.contentDocument</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
document</Code>
is an object reference to the document contained in the given frame.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f = document.getElementById(Å‚ÄúframeÅ‚Äù);</Code>
<Code>
if ( f.contentDocument ) {</Code>
<Code>
src_doc = f.contentDocument;</Code>
<Code>
working_title = src_doc.title;</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
This property returns <Code>
NULL</Code>
if there is no current document</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
contentWindow</Head1>
<Body>
The <Code>
contentWindow</Code>
property returns the window object for the frame.</Body>
<Head3>
Syntax</Head3>
<Code>
frameWindow = frameElement.contentWindow</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
frameWindow</Code>
is an object reference to the <Code>
window</Code>
object for this frame.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f = document.getElementById(Å‚ÄúframeÅ‚Äù);</Code>
<Code>
f.contentWindow.location = Å‚Äúhttp://mozilla.orgÅ‚Äù;</Code>
<Code>
f.contentWindow.history.back();</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
You can also get to the <Code>
window</Code>
object through a named frame. For example, a frame with the <Code>
name=Å‚ÄùmyFrameÅ‚Äù</Code>
can refer back to the <Code>
window</Code>
object as <Code>
window.frames[Å‚ÄúmyFrameÅ‚Äù]</Code>
.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
frameBorder</Head1>
<Body>
frameBorder gets/sets the border around the current frame.</Body>
<Head3>
Syntax</Head3>
<Code>
border = frameElement.frameBorder</Code>
<Code>
frameElement.frameBorder = border</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
border</Code>
gives the border width in number of pixels as string.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
// create a border around the current frame</Code>
<Code>
f = document.getElementById(Å‚Äúframe-1Å‚Äù);</Code>
<Code>
f.frameBorder = 2; </Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
Note that the data type for the value of the <Code>
frameBorder</Code>
is a string. This is because the value may be specified as either a number of pixels (e.g., Å‚Äú2Å‚Äù) or a percentage, in which case the percent sign is included. A value of Å‚Äú0Å‚Äù means no border at all.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
longDesc</Head1>
<Body>
The longDesc property specifies a url for a longer description of the contents of the current frame.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
url = frameElement.longDesc</Code>
<Code>
frameElement.longDesc = url</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
The <Code>
url</Code>
string provides a url where a longer description of the current frame can be found.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f = document.getElementById(Å‚Äúmain-frameÅ‚Äù);</Code>
<Code>
f.longDesc = Å‚Äúhttp://www.netcape.com/supplements/more.htmlÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
In the case of <Code>
FRAME</Code>
elements, the longDesc property is a way to point to a longer description than the title of the <Code>
FRAME</Code>
provides</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
marginHeight</Head1>
<Body>
Gets/sets the height of the frameÅ‚Äôs margin in pixels.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
sHeight = frameElement.marginHeight</Code>
<Code>
frameElement.marginHeight = sHeight</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
The <Code>
sHeight</Code>
string gives the height of the frameÅ‚Äôs margin in pixels.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f = document.getElementById(Å‚Äúframe1Å‚Äù);</Code>
<Code>
f.marginHeight = 3;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
marginWidth</Head1>
<Body>
Gets/sets the width of the frameÅ‚Äôs margin in pixels.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
sWidth = frameElement.marginWidth</Code>
<Code>
frameElement.marginWidth = sWidth</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
The <Code>
sWidth</Code>
string gives the width of the frameÅ‚Äôs margin in pixels.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f = document.getElementById(Å‚Äúframe1Å‚Äù);</Code>
<Code>
f.marginWidth = 3;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
name</Head1>
<Body>
The name of the current frame.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
framename = frameElement.name</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
frameName</Code>
is a string.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f = document.getElementById(Å‚Äúmain-frameÅ‚Äù);</Code>
<Code>
if (f.name != Å‚ÄúmainÅ‚Äù) {</Code>
<Code>
//</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
In the HTML, you can set the FRAME name attribute directly: 
<Code>
&lt;frame name=Å‚Äùf1Å‚Äù/&gt;</Code>
and then refer to that frame in the DOM with <Code>
window.frames[Å‚Äúf1Å‚Äù]</Code>
.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
noResize</Head1>
<Body>
Gets/sets whether the user can resize the current frame.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
bool = frameElement.noResize</Code>
<Code>
frameElement.noResize = bool</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
bool</Code>
is a boolean value indicating whether the current frame is resizable or not.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f = document.getElementById(Å‚Äúmain-frameÅ‚Äù);</Code>
<Code>
if ( user_level == Å‚ÄúbarneyÅ‚Äù ) {</Code>
<Code>
f.noResize = true;</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
scrolling</Head1>
<Body>
The scrolling property specifies whether the current frame should provide scrollbars or not.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
sBars = frameElement.scrolling</Code>
<Code>
frameElement.scrolling = sBars</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
sBars</Code>
is a string with the value Å‚ÄúautoÅ‚Äù, Å‚Äúno,Å‚Äù or Å‚Äúyes.Å‚Äù</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f = document.getElementById(Å‚Äúmain-frameÅ‚Äù);</Code>
<Code>
f.scrolling = yes;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The default value for this property is Å‚Äúauto,Å‚Äù which specifies that scrollbars be added whenever necessary. Å‚ÄúyesÅ‚Äù means that they are always present, and Å‚ÄúnoÅ‚Äù means that they are never present. </Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
src</Head1>
<Body>
The src property provides a url to load as content into the current frame.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
frameElement.src = sURL</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
sURL</Code>
is a string containing a URL.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f = document.getElementById(Å‚Äúcontent-frameÅ‚Äù);</Code>
<Code>
f.src = Å‚Äúwww.netscape.comÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Head1>
IFRAME</Head1>
<Body>
The <Code>
IFRAME</Code>
element is very much like a <Code>
FRAME</Code>
. The difference is that an <Code>
IFRAME</Code>
can be inserted in-line, hence the name <Code>
IFRAME</Code>
. Regular <Code>
FRAME</Code>
elements take up as much space as they can (given the dimensions of the <Code>
FRAMESET</Code>
, the presence of other frames, and the confines of the document itself). But iframes can be aligned in their containing elements, given a specific height and width, etc.</Body>
<Head2>
Properties</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
align</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Specifies how the <Code>
IFRAME</Code>
is to be aligned in the containing element.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
contentDocument</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
The <Code>
contentDocument</Code>
property returns the document the frame contains, if any.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
contentWindow</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
The <Code>
contentWindow</Code>
property returns the window parent of the iframe.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
frameBorder</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
frameBorder gets/sets the border around the current <Code>
IFRAME</Code>
.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
longDesc</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
The <Code>
longDesc</Code>
property points to a long description of the current iframe.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
marginHeight</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Gets/sets the height of the frameÅ‚Äôs margin in pixels.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
marginWidth</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
Gets/sets the width of the frameÅ‚Äôs margin in pixels.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
name</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
The name of the <Code>
IFRAME</Code>
element.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
scrolling</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
The scrolling property specifies whether the current frame should provide scrollbars or not.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
src</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
The src property provides a url to load as content into the current frame.</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head1>
align</Head1>
<Body>
Specifies how the <Code>
IFRAME</Code>
is to be aligned in the containing element.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
sAlign = iFrameElement.align</Code>
<Code>
iFrameElement.align = sAlign</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
sAlign</Code>
is a string with one of the values given in the Notes section below.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
i = document.getElementById(Å‚Äúfirst-frameÅ‚Äù);</Code>
<Code>
i.align = Å‚ÄútopÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
Possible values for align are Å‚ÄútopÅ‚Äù, Å‚ÄúmiddleÅ‚Äù, Å‚ÄúbottomÅ‚Äù, Å‚ÄúleftÅ‚Äù and Å‚Äúright.Å‚Äù The latter two cause the <Code>
IFRAME</Code>
to float to the current right or left margin. The default value for align is bottom. The align attribute is deprecated in HTML 4.0</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLIFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
contentDocument</Head1>
<Body>
The <Code>
contentDocument</Code>
property returns the document the frame contains, if any.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
document = iFrameElement.contentDocument</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
document</Code>
is an object reference to the document contained in the given frame.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
i= document.getElementById(Å‚Äúmy-iframeÅ‚Äù);</Code>
<Code>
if (i.contentDocument ) {</Code>
<Code>
src_doc = i.contentDocument;</Code>
<Code>
working_title = src_doc.title;</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
This property returns <Code>
NULL</Code>
if there is no current document.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
contentWindow</Head1>
<Body>
The <Code>
contentWindow</Code>
property returns the window object for the iframe.</Body>
<Head3>
Syntax</Head3>
<Code>
iframeWindow = iframeElement.contentWindow</Code>
<Head3>
Parameters</Head3>
<Indent>
<Code>
iframeWindow</Code>
is an object reference to the <Code>
window</Code>
object for this iframe.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
i = document.getElementById(Å‚ÄúiframeÅ‚Äù);</Code>
<Code>
i.contentWindow.location = Å‚Äúhttp://mozilla.orgÅ‚Äù;</Code>
<Code>
i.contentWindow.history.back();</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
You can also get to the <Code>
window</Code>
object through a named iframe. For example, an iframe with the <Code>
name=Å‚ÄùmyFrameÅ‚Äù</Code>
can refer back to the <Code>
window</Code>
object as <Code>
window.frames[Å‚ÄúmyFrameÅ‚Äù]</Code>
.</Body>
<Head3>
Specification</Head3>
<Body>
None.<Code>
</Code>
</Body>
<Body>
</Body>
<Head1>
frameBorder</Head1>
<Body>
frameBorder gets/sets the border around the current <Code>
IFRAME</Code>
.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
sBorder = iFrameElement.frameBorder</Code>
<Code>
iFrameElement.frameBorder = sBorder</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
sBorder</Code>
gives the border width in number of pixels as string.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
// create a border around the current iframe</Code>
<Code>
i= document.getElementById(Å‚Äúiframe-1Å‚Äù);</Code>
<Code>
i.frameBorder = 2; </Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
Note that the data type for the value of the <Code>
frameBorder</Code>
is a string. This is because the value may be specified as either a number of pixels (e.g., Å‚Äú2Å‚Äù) or a percentage, in which case the percent sign is included. A value of Å‚Äú0Å‚Äù means no border at all.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
longDesc</Head1>
<Body>
The <Code>
longDesc</Code>
property points to a long description of the current iframe.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
url = IFrameElement.longDesc</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
The <Code>
url</Code>
string provides a url where a longer description of the current frame can be found.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
f = document.getElementById(Å‚Äúmain-frameÅ‚Äù);</Code>
<Code>
f.longDesc = Å‚Äúhttp://www.netcape.com/suppl/more.htmlÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The Å‚Äúlong descriptionÅ‚Äù is meant to provide more information about the contents of a frame element. In the case of an <Code>
&lt;img&gt;</Code>
element, which also uses the longDesc property, it is meant to accompany <Code>
&lt;img&gt;</Code>
alt descriptions. </Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLIFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
marginHeight</Head1>
<Body>
Gets/sets the height of the frameÅ‚Äôs margin in pixels.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
sHeight = iFrameElement.marginHeight</Code>
<Code>
iFrameElement.marginHeight = sHeight</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
The <Code>
sHeight</Code>
string gives the height of the frameÅ‚Äôs margin in pixels.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
i= document.getElementById(Å‚Äúiframe1Å‚Äù);</Code>
<Code>
i.marginHeight = 3;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
Note that the data type for the value of the <Code>
marginHeight</Code>
is a string. This is because the value may be specified as either a number of pixels (e.g., Å‚Äú2Å‚Äù) or a percentage, in which case the percent sign is included. A value of Å‚Äú0Å‚Äù means no margin at all.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLIFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
marginWidth</Head1>
<Body>
Gets/sets the width of the frameÅ‚Äôs margin in pixels.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
sWidth = iFrameElement.marginWidth</Code>
<Code>
iFrameElement.marginWidth = sWidth</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
The <Code>
sWidth</Code>
string gives the width of the frameÅ‚Äôs margin in pixels.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
i = document.getElementById(Å‚Äúiframe1Å‚Äù);</Code>
<Code>
i.marginWidth = 3;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
Note that the data type for the value of the <Code>
marginWidth</Code>
is a string. This is because the value may be specified as either a number of pixels (e.g., Å‚Äú2Å‚Äù) or a percentage, in which case the percent sign is included. A value of Å‚Äú0Å‚Äù means no margin at all.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLIFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
name</Head1>
<Body>
The name of the current iframe.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
iframename = iframeElement.name</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
iframeName</Code>
is a string.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
i = document.getElementById(Å‚Äúmain-frameÅ‚Äù);</Code>
<Code>
if (i.name != Å‚ÄúmainÅ‚Äù) {</Code>
<Code>
//</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
In the HTML, you can set the <Code>
IFRAME</Code>
name attribute directly: 
<Code>
&lt;frame name=Å‚Äùf1Å‚Äù/&gt;</Code>
and then refer to that frame in the DOM with <Code>
window.frames[Å‚Äúf1Å‚Äù]</Code>
.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLIFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
scrolling</Head1>
<Body>
The scrolling property specifies whether the current frame should provide scrollbars or not.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
sBars = iFrameElement.scrolling</Code>
<Code>
iFrameElement.scrolling = sBars</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
sBars</Code>
is a string with the value Å‚ÄúautoÅ‚Äù, Å‚Äúno,Å‚Äù or Å‚Äúyes.Å‚Äù</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
i= document.getElementById(Å‚ÄúiframeÅ‚Äù);</Code>
<Code>
i.scrolling = yes;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The default value for this property is Å‚Äúauto,Å‚Äù which specifies that scrollbars be added whenever necessary. Å‚ÄúyesÅ‚Äù means that they are always present, and Å‚ÄúnoÅ‚Äù means that htey are never present. </Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLFrameElement</Code>
</Body>
<Body>
</Body>
<Head1>
src</Head1>
<Body>
The src property provides a url to load as content into the current frame.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
iFrameElement.src = sURL</Code>
<Code>
sURL= iFrameElement.src</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
sURL</Code>
is a string containing a URL.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
i = document.getElementById(Å‚Äúcontent-frameÅ‚Äù);</Code>
<Code>
i.src = Å‚Äúwww.netscape.comÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
DOM Level 2 -- <Code>
HTMLIFrameElement</Code>
</Body>
<Body>
</Body>
<Body>
</Body>
</chapter>
