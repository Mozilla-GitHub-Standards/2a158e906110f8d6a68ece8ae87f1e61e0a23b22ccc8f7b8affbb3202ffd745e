<chapter>
<title>DOM HTML Elements Reference</title>
<Body>
This chapter provides reference information for several specific <Code>
HTMLElement</Code>
interfaces. </Body>
<BulletedList>
<Bulleted>
<Bold>
HTMLFormElement Interface</Bold>
</Bulleted>
<Bulleted>
<Bold>
HTMLTableElement Interface</Bold>
</Bulleted>
<Bulleted>
[under construction...]</Bulleted>
</BulletedList>
<Body>
</Body>
<Body>
</Body>
<Head1>
HTMLFormElement Interface</Head1>
<Body>
As <Code>
HTML</Code>
elements, <Code>
FORM</Code>
elements expose all of the properties and methods described in the DOM Elements Reference chapter. They also expose the specialized interface described here.</Body>
<Body>
The APIs for manipulating FORM elements described here allow you to create and fully configure <Code>
FORM</Code>
elements using the DOM. The following snippet gives you some idea of how you might create a new form element and equip it with some of the attributes that the form submission process requires.</Body>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
f = document.createElement(Å‚ÄúformÅ‚Äù);</CellCode>
<CellCode>
body.appendChild(f);</CellCode>
<CellCode>
f.action = Å‚Äú\cgi-bin\some.cgiÅ‚Äù;</CellCode>
<CellCode>
f.method = Å‚ÄúPOSTÅ‚Äù</CellCode>
<CellCode>
...</CellCode>
<CellCode>
f.submit(); // submit the newly-created form!</CellCode>
</CELL>
</ROW>
</TABLE>
<Body>
In addition, the following complete HTML document shows how to extract info from an existing form element and how to set some of the read/write properties on that <Code>
FORM</Code>
.</Body>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
&lt;html&gt;</CellCode>
<CellCode>
&lt;head&gt;</CellCode>
<CellCode>
&lt;title&gt;form tests&lt;/title&gt;</CellCode>
<CellCode>
&lt;script&gt; function getFormInfo() {</CellCode>
<CellCode>
var info = &quot;&quot;;</CellCode>
<CellCode>
ta = document.getElementById(&quot;tex&quot;);</CellCode>
<CellCode>
f = document.forms[&quot;myform&quot;];</CellCode>
<CellCode>
info += &quot;f.elements: &quot;+f.elements+&quot;\n&quot;;</CellCode>
<CellCode>
info += &quot;f.length: &quot;+f.length+&quot;\n&quot;;</CellCode>
<CellCode>
info += &quot;f.name: &quot;+f.elements+&quot;\n&quot;;</CellCode>
<CellCode>
info += &quot;f.acceptCharset: &quot;+f.acceptCharset+&quot;\n&quot;;</CellCode>
<CellCode>
info += &quot;f.action: &quot;+f.action+&quot;\n&quot;;</CellCode>
<CellCode>
info += &quot;f.enctype: &quot;+f.enctype+&quot;\n&quot;;</CellCode>
<CellCode>
info += &quot;f.encoding: &quot;+f.encoding+&quot;\n&quot;;</CellCode>
<CellCode>
info += &quot;f.method: &quot;+f.method+&quot;\n&quot;;</CellCode>
<CellCode>
info += &quot;f.target: &quot;+f.target+&quot;\n&quot;;</CellCode>
<CellCode>
</CellCode>
<CellCode>
ta.setAttribute(&quot;value&quot;, info);</CellCode>
<CellCode>
}</CellCode>
<CellCode>
// contÅ‚Äôd...</CellCode>
</CELL>
</ROW>
</TABLE>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellCode>
</CellCode>
<CellCode>
function setFormInfo() {</CellCode>
<CellCode>
f = document.forms[&quot;myform&quot;];</CellCode>
<CellCode>
f.method = &quot;GET&quot;;</CellCode>
<CellCode>
f.action = &quot;/cgi-bin/evil_executable.cgi&quot;;</CellCode>
<CellCode>
f.name = &quot;totally_new&quot;;</CellCode>
<CellCode>
// click info again to get this new data </CellCode>
<CellCode>
// back from the form</CellCode>
<CellCode>
}&lt;/script&gt;</CellCode>
<CellCode>
&lt;/head&gt;</CellCode>
<CellCode>
</CellCode>
<CellCode>
&lt;body&gt;</CellCode>
<CellCode>
&lt;h1&gt;form tests&lt;/h1&gt;</CellCode>
<CellCode>
&lt;form name=&quot;myform&quot; id=&quot;myform&quot; action=&quot;/cgi-bin/test&quot; method=&quot;POST&quot;&gt;</CellCode>
<CellCode>
&lt;input type=&quot;button&quot; value=&quot;info&quot; onclick=&quot;getFormInfo();&quot;/&gt;</CellCode>
<CellCode>
&lt;input type=&quot;button&quot; value=&quot;set&quot; onclick=&quot;setFormInfo();&quot;/&gt;</CellCode>
<CellCode>
&lt;input type=&quot;reset&quot; value=&quot;reset&quot;/&gt;</CellCode>
<CellCode>
&lt;br&gt;</CellCode>
<CellCode>
&lt;textarea id=&quot;tex&quot; </CellCode>
<CellCode>
style=&quot;min-height:300;min-width:300&quot; /&gt;</CellCode>
<CellCode>
&lt;/form&gt;</CellCode>
<CellCode>
&lt;/body&gt;</CellCode>
<CellCode>
&lt;/html&gt;</CellCode>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head2>
Properties</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
elements</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
elements returns an array of all the form controls contained in the <Code>
FORM</Code>
element.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
length</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
length returns the number of controls in the <Code>
FORM</Code>
element.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
name</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
name returns the name of the current <Code>
FORM</Code>
element as a string.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
acceptCharset</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
elements returns a list of the supported character sets for the current <Code>
FORM</Code>
element.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
action</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
action gets/sets the action of the <Code>
FORM</Code>
element.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
enctype</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
enctype gets/sets the content type of the <Code>
FORM</Code>
element.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
encoding</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
encoding gets/sets the content type of the <Code>
FORM</Code>
element.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
method</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
method gets/sets the HTTP method used to submit the form.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
target</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
target gets/sets the target of the action (i.e., the frame to render its output in).</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head2>
Methods</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
submit()</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
submit() submits the form.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
reset()</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
reset() resets the form to its initial state.</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head1>
elements</Head1>
<Body>
elements returns an array of all the form controls contained in the <Code>
FORM</Code>
element.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
controls = form.elements</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
controls</Code>
is a <Code>
nodeList</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
inputs = document.getElementById(Å‚Äúform1Å‚Äù).elements</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
elements</Body>
<Body>
</Body>
<Head1>
length</Head1>
<Body>
length returns the number of controls in the <Code>
FORM</Code>
element.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
num = form.elements</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
num</Code>
is an integer.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
if (document.getElementById(Å‚Äúform1Å‚Äù).length &gt; 1) {</Code>
<Code>
// more than one form control here</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
length</Body>
<Body>
</Body>
<Head1>
name</Head1>
<Body>
name returns the name of the current <Code>
FORM</Code>
element as a string.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
name = form.name</Code>
<Code>
form.name = name</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
name</Code>
is a <Code>
string</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
form1 = document.getElementById(Å‚Äúform1Å‚Äù).name;</Code>
<Code>
if (form1 != document.form.form1) {</Code>
<Code>
// browser doesnÅ‚Äôt support this form of reference</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
Note that this property is read/write, which means that you can change the name of a form or set it if it hasnÅ‚Äôt been set alreaDY.</Body>
<Head3>
Specification</Head3>
<Body>
name</Body>
<Body>
</Body>
<Head1>
acceptCharset</Head1>
<Body>
elements returns a list of the supported character sets for the current <Code>
FORM</Code>
element.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
charSets = form.acceptCharset;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
charSets</Code>
is a <Code>
string</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
inputs = document.forms[Å‚ÄúmyformÅ‚Äù].acceptCharset</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
acceptCharset</Body>
<Body>
</Body>
<Head1>
action</Head1>
<Body>
action gets/sets the action of the <Code>
FORM</Code>
element.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
action = form.action</Code>
<Code>
form.action = action</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
action</Code>
is a <Code>
string</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
form.action = Å‚Äú/cgi-bin/publishÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The action of a form is the program that is executed on the server when the form is submitted. This property can be retrieved or set.</Body>
<Head3>
Specification</Head3>
<Body>
action</Body>
<Body>
</Body>
<Head1>
enctype</Head1>
<Body>
enctype gets/sets the content type of the <Code>
FORM</Code>
element.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
enctype = form.enctype</Code>
<Code>
form.enctype = enctype</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
enctype</Code>
is a <Code>
string</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
form.enctype = Å‚Äúapplication/x-www-form-urlencodedÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The encoding type is generally Å‚Äúapplication/x-www-form-urlencodedÅ‚Äù.</Body>
<Head3>
Specification</Head3>
<Body>
enctype</Body>
<Body>
</Body>
<Head1>
encoding</Head1>
<Body>
encoding gets/sets the content type of the <Code>
FORM</Code>
element.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
encoding = form.enctype</Code>
<Code>
form.enctype = encoding</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
encoding</Code>
is a <Code>
string</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
form.encoding = Å‚Äúapplication/x-www-form-urlencodedÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The encoding type is generally Å‚Äúapplication/x-www-form-urlencodedÅ‚Äù.</Body>
<Head3>
Specification</Head3>
<Body>
encoding</Body>
<Body>
</Body>
<Head1>
method</Head1>
<Body>
method gets/sets the HTTP method used to submit the form.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
meth = form.method</Code>
<Code>
form.method = meth</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
meth</Code>
is a <Code>
string</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
document.forms[Å‚ÄúmyformÅ‚Äù].method = Å‚ÄúPOSTÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
method</Body>
<Body>
</Body>
<Head1>
target</Head1>
<Body>
target gets/sets the target of the action (i.e., the frame to render its output in).</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
targ = form.target</Code>
<Code>
form.target = targ</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
targ</Code>
is a <Code>
string</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
myForm.target = document.frames[1].name;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
target</Body>
<Body>
</Body>
<Head1>
submit()</Head1>
<Body>
submit() submits the form.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
form.submit()</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
None</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
document.forms[Å‚ÄúmyformÅ‚Äù].submit()</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
This method does the same as the form submit button.</Body>
<Body>
* can Å‚ÄúautomaticallyÅ‚Äù submit things this way without having to hit the submit button. ?But do you have to pass in the form parameters?</Body>
<Head3>
Specification</Head3>
<Body>
submit</Body>
<Body>
</Body>
<Body>
</Body>
<Head1>
reset()</Head1>
<Body>
reset() resets the form to its initial state.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
form.reset()</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
None</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
document.forms[Å‚ÄúmyformÅ‚Äù].reset();</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
This method is the same as the form reset button.</Body>
<Head3>
Specification</Head3>
<Body>
reset</Body>
<Body>
</Body>
<Body>
</Body>
<Head1>
HTMLTableElement Interface</Head1>
<Body>
<Code>
table</Code>
objects expose the <Code>
HTMLTableElement</Code>
interface, which provides special properties and methods (beyond the regular <Code>
element</Code>
object interface they also have available to them by inheritance) for manipulating the layout and presentation of tables in HTML.</Body>
<Head2>
Properties</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
caption</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
caption returns the table caption.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
tHead</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
tHead returns the table head.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
tFoot</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
tFoot returns the table footer.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
rows</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
rows returns the rows in the table.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
tBodies</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
tBodies returns the table bodies.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
align</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
align gets/sets the alignment of the table.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
bgColor</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
bgColor gets/sets the background color of the table.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
border</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
border gets/sets the table border.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
cellPadding</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
cellPadding gets/setst the cell padding.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
cellSpacing</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
cellSpacing gets/set the spacing around the table.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
frame</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
frame specifies which sides of the table have borders.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
rules</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
rules specifies which interior borders are visible.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
summary</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
summary gets/sets the table summary.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
width</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
width gets/sets the width of the table.</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head2>
Methods</Head2>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
createTHead()</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
createTHead() creates a table header.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
deleteTHead()</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
deleteTHead() removes the table header.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
createTFoot()</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
createTFoot() creates a table footer.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
deleteTFoot()</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
deleteTFoot() removes a table footer.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
createCaption()</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
createCaption() creates a new caption for the table.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
deleteCaption()</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
deleteCaption() removes the table caption.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
insertRow()</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
insertRow() inserts a new row.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<Bold>
deleteRow()</Bold>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
deleteRow() removes a row.</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
</Body>
<Head1>
caption</Head1>
<Body>
caption returns the table caption.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
caption = table.caption</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
caption</Code>
is a string.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
if (table.caption) {</Code>
<Code>
// do something with the caption</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
This property returns void if no caption exists on the table.</Body>
<Head3>
Specification</Head3>
<Body>
caption</Body>
<Body>
</Body>
<Body>
</Body>
<Head1>
tHead</Head1>
<Body>
tHead returns the tableÅ‚Äôs <Code>
THEAD</Code>
.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
th_el = table.tHead</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
th_el</Code>
is a <Code>
HTMLTableSectionElement</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
if (table.tHead == my_head_el) {</Code>
<Code>
...</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
This property returns <Code>
VOID</Code>
if no <Code>
THEAD</Code>
element exists.</Body>
<Head3>
Specification</Head3>
<Body>
tHead</Body>
<Body>
</Body>
<Head1>
tFoot</Head1>
<Body>
tFoot returns the tableÅ‚Äôs <Code>
TFOOT</Code>
element.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
th_el = table.tFoot</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
tf_el</Code>
is a <Code>
HTMLTableSectionElement</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
if (table.tFoot == my_foot) {</Code>
<Code>
...</Code>
<Code>
}</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
This property returns <Code>
VOID</Code>
if no <Code>
TFOOT</Code>
element exists.</Body>
<Head3>
Specification</Head3>
<Body>
tFoot</Body>
<Body>
</Body>
<Head1>
rows</Head1>
<Body>
rows returns a collection of the rows in the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
rows = table.rows</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
rows</Code>
is an <Code>
HTMLCollection</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
myrows = mytable.rows;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The collection returned by this property includes the <Code>
THEAD</Code>
and <Code>
TFOOT</Code>
and <Code>
TBODY</Code>
elements, if any, on the current table.</Body>
<Head3>
Specification</Head3>
<Body>
rows</Body>
<Body>
</Body>
<Head1>
tBodies</Head1>
<Body>
tBodies returns a collection of the table bodies.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
bodies = table.tBodies</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
bodies</Code>
is an <Code>
HTMLCollection</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
length(mytable.tBodies);</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
tBodies</Body>
<Body>
</Body>
<Head1>
align</Head1>
<Body>
align gets/sets the alignment of the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
alignment = table.align</Code>
<Code>
table.align = alignment</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
alignment</Code>
is a string with one of the following values:</Indent>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
left</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
center</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
right</CellBody>
</CELL>
</ROW>
</TABLE>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.align = Å‚ÄúcenterÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The align attribute is deprecated in HTML4.0.</Body>
<Head3>
Specification</Head3>
<Body>
align</Body>
<Body>
</Body>
<Head1>
bgColor</Head1>
<Body>
bgcolor gets/sets the background color of the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
color = table.bgColor</Code>
<Code>
table.bgColor = color</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
color</Code>
is a string representing a color value.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.bgColor = Å‚ÄúlightblueÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
The bgColor attribute is deprecated in HTML 4.0.</Body>
<Head3>
Specification</Head3>
<Body>
bgColor</Body>
<Body>
</Body>
<Head1>
border</Head1>
<Body>
border gets/sets the border width.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.border = width</Code>
<Code>
width = table.border</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
width </Code>
is a string representing the width in pixels.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.border=Å‚Äù2Å‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
This attribute is deprecated in HTML 4.0.</Body>
<Head3>
Specification</Head3>
<Body>
border</Body>
<Body>
</Body>
<Head1>
cellPadding</Head1>
<Body>
cellPadding gets/sets the padding around the individual cells of the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.cellPadding = padding</Code>
<Code>
padding = table.cellPadding</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
padding</Code>
is a string representing the padding in pixels.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.cellPadding = Å‚Äú10Å‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
cellPadding</Body>
<Body>
</Body>
<Head1>
cellSpacing</Head1>
<Body>
cellSpacing gets/sets the spacing around the individual cells of the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.cellSpacing = spacing</Code>
<Code>
spacing = table.cellSpacing</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
spacing</Code>
is a string representing the spacing around the table in pixels.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.cellSpacing = Å‚Äú10Å‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
cellSpacing</Body>
<Body>
</Body>
<Head1>
frame</Head1>
<Body>
frame specifies which external table borders to render.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.frame = side</Code>
<Code>
side = table.frame</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
side</Code>
is a string with one of the following values:</Indent>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
void</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
no sides. this is the default.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
above</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
top side</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
below</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
bottom side</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
hsides</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
top and bottom only</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
vsides</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
right and left sides only</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
lhs</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
left-hand side only</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
rhs</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
right-hand side only</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
box</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
all four sides</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
border</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
all four sides</CellBody>
</CELL>
</ROW>
</TABLE>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.frame = Å‚ÄúborderÅ‚Äù;</Code>
<Code>
mytable.border = Å‚Äú2pxÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
frame</Body>
<Body>
</Body>
<Head1>
rules</Head1>
<Body>
rules specifies which cell borders to render in the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.rules = rules</Code>
<Code>
rules = table.rules</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
rules</Code>
is a string with one of the following values:</Indent>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
none</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
no rules</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
groups</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
lines between groups only</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
rows</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
lines between rows</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
cols</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
lines between cols</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
all</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
lines between all cells</CellBody>
</CELL>
</ROW>
</TABLE>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
t = document.getElementById(Å‚ÄúmytableÅ‚Äù);</Code>
<Code>
t.rules = Å‚ÄúallÅ‚Äù; // turn on all the internal borders</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
rules</Body>
<Body>
</Body>
<Head1>
summary</Head1>
<Body>
summary gets/sets a table description.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.summary = summary</Code>
<Code>
summary = table.summary</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
summary</Code>
is a string.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
t.rules = Å‚ÄúnoneÅ‚Äù;</Code>
<Code>
t.summary = Å‚Äúremoved internal bordersÅ‚Äù;</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
summary</Body>
<Body>
</Body>
<Head1>
width</Head1>
<Body>
width specifies the desired width of the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.width = width</Code>
<Code>
width = table.width</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
width</Code>
is a string representing the width in number of pixels or as a percentage value.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.width=Å‚Äù75%Å‚Äù</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
width</Body>
<Body>
</Body>
<Body>
</Body>
<Head1>
createTHead()</Head1>
<Body>
createTHead() creates a new <Code>
THEAD</Code>
for the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
th = table.createTHead()</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
th</Code>
is an <Code>
HTMLElement</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
myhead = mytable.createTHead();</Code>
<Code>
//checking:</Code>
<Code>
myhead == mytable.tHead</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
If the element already exists on the table, then this method returns that element</Body>
<Head3>
Specification</Head3>
<Body>
createTHead()</Body>
<Body>
</Body>
<Head1>
deleteTHead()</Head1>
<Body>
deleteTHead() removes a <Code>
THEAD</Code>
from the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.deleteTHead()</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
None.</Code>
</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.deleteTHead();</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
deleteTHead()</Body>
<Body>
</Body>
<Head1>
createTFoot()</Head1>
<Body>
createTFoot() creates a new <Code>
TFOOT</Code>
for the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
tf = table.createTFoot()</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
tf </Code>
is an <Code>
HTMLElement</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
myfoot = mytable.createTFoot();</Code>
<Code>
//checking:</Code>
<Code>
myfoot == mytable.tFoot</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
If the element already exists on the table, then this method returns that element</Body>
<Head3>
Specification</Head3>
<Body>
createTFoot()</Body>
<Body>
</Body>
<Head1>
deleteTFoot()</Head1>
<Body>
deleteTFoot() removes a <Code>
TFOOT</Code>
from the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.deleteTFoot()</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
None.</Code>
</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.deleteTFoot();</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
deleteTFoot()</Body>
<Body>
</Body>
<Head1>
createCaption()</Head1>
<Body>
createCaption() creates a new caption for the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
tcap = table.createCaption()</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
tcap</Code>
is an <Code>
HTMLElement</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mycap = mytable.createCaption();</Code>
<Code>
</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
If the element already exists on the table, then this method returns that element.</Body>
<Head3>
Specification</Head3>
<Body>
createCaption()</Body>
<Body>
</Body>
<Head1>
deleteCaption()</Head1>
<Body>
deleteCaption() removes the caption from the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.deleteCaption()</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
None</Code>
.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.deleteCaption();</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
deleteCaption()</Body>
<Body>
</Body>
<Head1>
insertRow()</Head1>
<Body>
insertRow() inserts a new row in the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
row = table.insertRow(index)</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
index</Code>
is a number representing where in the table to insert the new row.</Indent>
<Indent>
row is an <Code>
HTMLElement</Code>
</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
newrow = mytable.insertRow(0); // insert a new first row</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
insertRow()</Body>
<Body>
</Body>
<Head1>
deleteRow()</Head1>
<Body>
deleteRow() removes a row from the table.</Body>
<Head3>
Syntax</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
table.deleteRow(index)</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Parameters</Head3>
<Indent>
<Code>
index</Code>
is a number representing the row that should be deleted.</Indent>
<Head3>
Example</Head3>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Code>
mytable.deleteRow(1); // delete the second row</Code>
</CELL>
</ROW>
</TABLE>
<Head3>
Notes</Head3>
<Body>
None.</Body>
<Head3>
Specification</Head3>
<Body>
deleteRow()</Body>
<Body>
</Body>
<Body>
</Body>
<Body>
</Body>
</chapter>
