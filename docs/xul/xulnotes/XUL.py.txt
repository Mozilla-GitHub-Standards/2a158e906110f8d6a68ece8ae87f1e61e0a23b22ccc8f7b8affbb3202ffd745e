class XWindow:

	def __init__(self, title, w=200, h=100):
		self.title = title
		self.width = w
		self.height = h

		print "main XUL window created."
  

	def Bake(self, child1, child2):
		self.css = """<?xml-stylesheet href="chrome://oven/skin" type="text/css"?>""" 
		self.wtop = """<window id="xulpie"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  title="%s"
  height="%d"
  width="%d" 
  orient="vertical"

  align="center"
  autostretch="never">""" % (self.title, self.height, self.width)

		# Right now this is all hard-coded for window, then text, then button.

		self.c1 = child1
		self.c2 = child2
		print "...preparing XUL file..."

		
	def Serve(self):

		import os
		xf = open('C:/Program Files/Netscape/Mozilla/bin/chrome/oven/content/default/oven.xul', 'w')
		xf.write(self.css + '\n' + self.wtop + '\n\n')
		xf.write('  <text class="%s" value="%s" />\n' % (self.c1.bclass, self.c1.value) )
		xf.write('  <button class="right" value="%s" oncommand="%s" />\n</window>\n' % (self.c2.value, self.c2.handler) )


		cmd = 'mozilla -chrome "chrome://oven/content"'
		os.system(cmd)
		print "...opening XUL file in oven..."	

class XText:
	
	def __init__(self, value, bclass='marquee'):
		self.value = value
		self.bclass = bclass


class XButton:
	
	def __init__(self, value, oncommand='alert("Click!")' ):
		self.value = value
		self.handler = oncommand
		

if __name__ == "__main__":

	xWin = XWindow('test')
	xTex = XText('This is a test')
	xButt = XButton('Quit', oncommand="window.close()")
	xWin.Bake(xTex, xButt)
	xWin.Serve()

	





	

	