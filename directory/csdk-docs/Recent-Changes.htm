<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<link rel="top" title="Home" href="http://www.mozilla.org/">
<link rel="stylesheet" type="text/css" href="../../css/print.css"  media="print">
<link rel="stylesheet" type="text/css" href="../../css/base/content.css"  media="all">
<link rel="stylesheet" type="text/css" href="../../css/cavendish/content.css" title="Cavendish" media="screen">
<link rel="stylesheet" type="text/css" href="../../css/base/template.css"  media="screen">
<link rel="stylesheet" type="text/css" href="../../css/cavendish/template.css" title="Cavendish" media="screen">
<link rel="icon" href="../../images/mozilla-16.png" type="image/png">

 <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
 <title>Recent Changes - Mozilla LDAP C SDK</title>
<script src="../../__utm.js" type="text/javascript"></script>
</head>
<body id="www-mozilla-org" class="deepLevel">
<div id="container">
<p class="important">You are currently viewing a snapshot of www.mozilla.org taken on April 21, 2008. Most of this content is
highly out of date (some pages haven't been updated since the project began in 1998) and exists for historical purposes only.  If
there are any pages on this archive site that you think should be added back to www.mozilla.org, please <a
href="https://bugzilla.mozilla.org/enter_bug.cgi?product=Websites&component=www.mozilla.org">file a bug</a>.</p>
<p class="skipLink"><a href="#mainContent" accesskey="2">Skip to main content</a></p>
<div id="header">
<h1><a href="/" title="Return to home page" accesskey="1">Mozilla</a></h1>
<ul>
<li id="menu_aboutus"><a href="../../about/" title="Getting the most out of your online experience">About</a></li>
<li id="menu_developers"><a href="../../developer/" title="Using Mozilla's products for your own applications">Developers</a></li>
<li id="menu_store"><a href="http://store.mozilla.org/?r=mozorg1" title="Shop for Mozilla products on CD and other merchandise">Store</a></li>
<li id="menu_support"><a href="../../support/" title="Installation, trouble-shooting, and the knowledge base">Support</a></li>
<li id="menu_products"><a href="../../products/" title="All software Mozilla currently offers">Products</a></li>
</ul>
<form id="searchbox_002443141534113389537:ysdmevkkknw" action="http://www.google.com/cse" title="mozilla.org Search">
<div>
<label for="q" title="Search mozilla.org's sites">search mozilla:</label>
<input type="hidden" name="cx" value="002443141534113389537:ysdmevkkknw">
<input type="hidden" name="cof" value="FORID:0">
<input type="text" id="q" name="q" accesskey="s" size="30">
<input type="submit" id="submit" value="Go">
</div>
</form>
</div>
<hr class="hide">
<div id="mBody">
<div id="side">

<ul id="nav">
<li><a title="Roadmap" href="../../roadmap.html"><strong> Roadmap</strong></a></li>
<li><a title="Projects" href="../../projects/"><strong> Projects</strong></a></li>
<li><a title="For developers" href="../../developer/"><strong> Coding</strong></a>
<ul>
<li><a title="Module Owners" href="../../owners.html"> Module Owners</a></li>
<li><a title="Hacking" href="../../hacking/"> Hacking</a></li>
<li><a title="Get the Source" href="http://developer.mozilla.org/en/docs/Download_Mozilla_Source_Code"> Get the Source</a></li>
<li><a title="Building Mozilla" href="http://developer.mozilla.org/en/docs/Build_Documentation"> Build It</a></li>
</ul>
</li>
<li><a title="Testing" href="../../quality/"><strong> Testing</strong></a>
<ul>
<li><a title="Downloads of mozilla.org software releases" href="../../download.html"> Releases</a></li>
<li><a title="Latest mozilla builds for testers" href="../../developer/#builds"> Nightly Builds</a></li>
<li><a title="For testers to report bugs" href="https://bugzilla.mozilla.org/"> Report A Problem</a></li>
</ul>
</li>
<li><a title="Tools for mozilla developers" href="../../tools.html"><strong> Tools</strong></a>
<ul>
<li><a title="Bug tracking system for mozilla testers." href="https://bugzilla.mozilla.org/"> Bugzilla</a></li>
<li><a title="Latest status of mozilla builds" href="http://tinderbox.mozilla.org/showbuilds.cgi?tree=Firefox"> Tinderbox</a></li>
<li><a title="Latest checkins" href="http://bonsai.mozilla.org/cvsqueryform.cgi"> Bonsai</a></li>
<li><a title="Source cross reference" href="http://lxr.mozilla.org/seamonkey/"> LXR</a></li>
</ul>
</li>
<li><a title="Frequently Asked Questions." href="../../faq.html"><strong> FAQs</strong></a></li>
</ul>

</div>
<hr class="hide">
<div id="mainContent">





<h1>Mozilla LDAP C SDK Recent Changes</h1>

<p><em>Last updated August 21, 2003<br>(but this file is not 
completely up-to-date)</em></p>

<h2>Contents</h2>

<ul>
 <li><a href="#new">Added Features and Enhancements</a>
 <ul>
  <li><a href="#misc">Miscellaneous Changes</a>
  <li><a href="#connect_timeout">LDAP_X_OPT_CONNECT_TIMEOUT</a>
  <li><a href="#errmsg">LDAP library/API Version Mismatch Error 
   Messages</a>
  <li><a href="#64bit">64 Bit Safe Changes</a>
  <li><a href="#parseurl">ldap_url_parse() with Space-Separated 
   Lists of Hosts</a>
 </ul>
 <li><a href="#problems">Known Problems</a>
</ul>

<h2 id="new">Added features and enhancements</h2>
<h3 id="misc">Miscellaneous Changes</h3>

<ul>
 <li>The <code><a href="http://lxr.mozilla.org/mozilla/source/directory/c-sdk/ldap/include/ldap.h">ldap.h</a></code> 
  file is now a small file that, for clarity, #includes several 
  other files.
 <li>A new extended I/O function callback scheme was added to the 
  SDK. The <code>ldap_x_ext_io_fns</code> struct has been added to 
  hold extended I/O function pointers.  The 
  <code><a href="http://lxr.mozilla.org/mozilla/source/directory/c-sdk/ldap/include/ldap-extension.h#307">ldap-extension.h</a></code> 
  file outlines the new callbacks.
 <li>Netscape Portable Runtime library (NSPR) support was added. 
  The library, <code>libprldap</code> was added to provide a simple 
  way for an application that is using NSPR to tie 
  <code>libldap</code> into their environment. The 
  <code><a href="http://lxr.mozilla.org/mozilla/source/directory/c-sdk/ldap/include/ldappr.h">ldappr.h</a></code> 
  file outlines the new interface. The new example 
  <code><a href="http://lxr.mozilla.org/mozilla/source/directory/c-sdk/ldap/examples/nsprio.c">nsprio.c</a></code> 
  shows how to use the new interfaces. 
 <li>The <code>ldap_search*()</code> line of functions was modified 
  as follows: 
  <ul>
   <li>The <code>ldap_search*()</code> line of functions now return 
    <code>LDAP_PARAM_ERROR</code> if a <code>sizelimit</code> 
    smaller than -1 is passed to the function call.
   <li>The <code>ldap_search*()</code> line of functions now set 
    <code>*result</code> to <code>NULL</code> in all error 
    situations.
  </ul>
 <li>The <code>ldapmodify</code> utility was modified as follows: 
  <ul>
   <li>The <code>-A</code> option was added, which causes the tool 
    to display non-ASCII values in conjunction with the 
    <code>-v</code> option.
   <li>The <code>-B</code> and <code>-q</code> options were added, 
    which provide support for the bulk import feature available 
    in the Netscape Directory Server 6.0 and later.
   <li>Support for the <code>version</code> directive was added.
   <li>Support for <code>changetype</code> with <code>moddn</code> 
    was added.
   <li>Improved the LDIF output to provide better support for file URLs.
  </ul>
 <li>The <code>ldapsearch</code> utility was modified as follows:
  <ul>
   <li>The <code>-e</code> option was added, which minimizes 
    base-64 encoding of values. By default, <code>ldapsearch</code> 
    will always produce ASCII values and any non-ASCII values (such 
    as UTF-8 characters) as base-64 encoded characters. The new 
    <code>-e</code> option causes <code>ldapsearch</code> to return 
    as much real data as is possible. With <code>-e</code>, only 
    values or DNs that contain an '<code>\r</code>', an 
    '<code>\n</code>', or that start with ':', ' ', or 
    '<code>&lt;</code>' are base-64 encoded. Note that the 
    <code>-e</code> option may cause <code>ldapsearch</code> to 
    produce LDIF that does not conform to 
    <a href="http://www.ietf.org/rfc/rfc2849.txt">RFC 2849</a>).
   <li>The <code>-U</code> option was added, which operates in 
    conjunction with the <code>-t</code> option (which causes 
    <code>ldapsearch</code> to produce file URLs).
   <li>To conform with 
    <a href="http://www.ietf.org/rfc/rfc2849.txt">RFC 2849</a>, 
    <code>ldapsearch</code> now outputs a "<code>version: 1</code>" 
    line at the start of all LDIF. A new <code>-1</code> (minus 1) 
    option has been added to <code>ldapsearch</code> to suppress 
    this line.
   <li>The <code>ldapsearch</code> utility has been modified to 
    support a zero length filter, represented as either "" or 
    <code>NULL</code>. The zero-length filter "" is now an alias for 
    "<code>(objectclass=*)</code>".
  </ul>
 <li>The following new examples have been added to the SDK:
  <ul>
   <li>csearch -- search with ldap_memcache
   <li>ssnoauth -- search over SSL
   <li>ssearch -- search over SSL with cert based authentication
   <li>nsprio -- example usage of the extended IO callbacks
   <li>psearch -- uses persistent search
   <li>srvsort -- shows server-side sorting <!-- Added in 4.0-->
   <li>ppolicy -- shows use of password policies <!-- Added in 4.0-->
   <li>crtfilt -- demonstrates the use of 
    <code>ldap_create_filter()</code> <!-- Added in 4.0-->
  </ul>
 <li>The <code>ldap.h</code> header file was modified as follows:
  <ul>
   <li>Support was added for discovery of API version information at 
    run-time with the <code>LDAP_OPT_API_INFO</code> option and 
    <code>LDAPAPIInfo</code> structure.
   <li>Support was added for the discovery of API extensions at 
    run-time with the <code>LDAP_OPT_API_FEATURE_INFO</code> and 
    <code>LDAPAPIFeatureInfo</code> structures.
   <li>The following macros were added to support the discovery of 
    API version information at compile-time: 
    <code>LDAP_VENDOR_VERSION</code>, <code>LDAP_VENDOR_NAME</code>, 
    and <code>LDAP_API_VERSION</code>.
   <li>A set pf <code>LDAP_API_FEATURE_*</code> macros were added to 
    support the discovery of API extensions at compile-time.
   <li>The <code>LDAP_OPT_PRIVATE_EXTENSION_BASE</code> macro was added.
   <li>The <code>ldap_unbind_ext()</code> function was added.
   <li>The <code>ldap_mods_u</code> name was added to the 
    <code>mod_vals</code> union.
   <li>A number of function parameters were modified to be declared 
    with <code>const</code>.
  </ul>
 <li>The <code>ldap_get_option()</code> function was modified as follows:
  <ul>
   <li>Support for the <code>LDAP_OPT_HOST_NAME</code> option was added.
   <li>The function now returns a duplicate copy of data when 
    <code>LDAP_OPT_SERVER_CONTROLS</code>, 
    <code>LDAP_OPT_CLIENT_CONTROLS</code>, or 
    <code>LDAP_OPT_ERROR_STRING</code> are retrieved.
   <li>The <code>LDAP_OPT_MATCHED_DN</code> option was added.
   <li>Support for <code>LDAP_OPT_ERROR_NUMBER</code> and 
    <code>LDAP_OPT_ERROR_STRING</code> were added.
  </ul>
 <li>The <code>lber.h</code> header file was modified as follows:
  <ul>
   <li>Support was added for the <code>LBER_USE_DER</code> option.
   <li>Several internal datatypes were changed to provide support 
    for <code>liblber</code>. In the header file, see the definition 
    for <code>_LP64</code> for details.
   <li>The typedef <code>BerValue</code> was added to the 
    <code>berval</code> struct, as follows:
    <pre>typedef struct berval {
  unsigned long bv_len;
  char          *bv_val;
} BerValue;</pre>

  </ul>
 <li>Support was added for receiving unsolicited LDAPv3 notification 
  messages.
 <li>The header files <code>disptmpl.h</code> and 
  <code>srchpref.h</code> are now shipped with the SDK.
 <li>When using SSL client authentication with the command-line 
  utilities, you are no longer required to provide the Cert DB 
  password with the <code>-W</code> option on the command line. If 
  you do not specify the <code>-W</code> option, the command-line 
  utility will prompt you for your Cert DB password.
  <p></p>
  Alternatively, you can provide a path to a PIN file that contains 
  your Cert DB password. The format of a PIN file is the same as the 
  PIN file that you would use for Netscape Directory Server. That 
  is, if your Cert DB password is <code>secret12</code>, then you 
  would enter the following line into your PIN file:
  <p></p>
  <pre>Internal (Software) Token:secret12</pre>
  <p></p>
  You would then point to this file using the <code>-I</code> 
  option on the command line utility. For example:
  <p></p>
  <pre>-I /home/bjensen/.mozilla/bjensen/8vlmm76q.slt/my_pin_file</pre>
  <p></p>
  The use of either the PIN file or interactive prompting for your 
  password means that your Cert DB password is not exposed through 
  process examination (that is, by using the <code>ps</code> command 
  on Unix).
</ul>

<h3 id="connect_timeout">LDAP_X_OPT_CONNECT_TIMEOUT</h3>

<p>There is a new option that allows you to control the TCP/IP 
timeout. Normally connection attempts will block for a period of 
time when the connection is for a host that is not reachable. 
<code>LDAP_X_OPT_CONNECT_TIMEOUT</code> allows you to control the 
amount of time for which a connection attempt will block in the 
event that the host is not reachable. You can tell the SDK to return
immediately, return after an amount of time that you specify, or to
block indefinitely.</p>

<p>The timeout value is set on a per-session handle basis and you 
can control the default timeout that is used by all session handles. 
Use <code>ldap_set_option()</code> to set the timeout value. Use 
<code>ldap_get_option()</code> to return the timeout value that is 
set for the current session handle.</p>

<h4>Timeout Values</h4>

<p>To support this option, the following special values are now 
available:</p>

<ul>
 <li><code>LDAP_X_IO_TIMEOUT_NO_WAIT</code> -- The connection 
  attempt returns immediately even if the server is reachable.
 <li><code>LDAP_X_IO_TIMEOUT_NO_TIMEOUT</code> -- The connection
  attempt will block until the host responds, or for the duration of 
  the platform's connection timeout. Depending on the platform, the 
  default connection timeout can be anywhere from 20 seconds to 3 
  minutes or longer. This value is the default.
</ul>

<p>In addition, you can specify a timeout value in milliseconds.</p>

<h4>Setting the Timeout Value</h4>
<p>The following code fragment sets the timeout value for the 
session handle to 10 seconds.</p>

<pre>#include &lt;stdio.h&gt;
#include "ldap.h"

#define HOST "ldap.example.com"
#define PORT 389

...

LDAP *ld;
LDAPMessage *result;
int rc, version;

/* timeout is specified in milliseconds. 10000 = 10 seconds. */
int timeout = 10000;

...

if ( ( ld = ldap_init( HOST, PORT ) ) == NULL ) {
	perror( "ldap_init" );
	return( -1 );
}

if ( ldap_set_option( ld, LDAP_X_OPT_CONNECT_TIMEOUT, &amp;timeout ) != LDAP_SUCCESS ) {
	rc = ldap_get_lderrno( ld, NULL, NULL);
	fprintf( stderr, "ldap_set_option: %s\n", ldap_err2string( rc ) );
	ldap_unbind( ld );
	return (rc);
}

...</pre>

<p>You can also control the default timeout for all LDAP session 
handles by setting the LDAP * value to <code>NULL</code> using 
<code>ldap_set_option()</code>. For example:</p>

<pre>int timeout = LDAP_X_IO_TIMEOUT_WAIT;

ldap_set_option( NULL, LDAP_X_OPT_CONNECT_TIMEOUT, &amp;timeout );

/* the default timeout is now set for all new ldap connections that 
    are created after this call to ldap_set_option. */</pre>

<h4>Retrieving the Timeout Value</h4>

<p>The following code fragment retrieves the timeout value for the 
current session handle.</p>

<pre>#include &lt;stdio.h&gt;
#include "ldap.h"

#define HOST "ldap.example.com"
#define PORT 389

...

LDAP *ld;
LDAPMessage *result;
int rc, version, timeout;

...

if ( ( ld = ldap_init( HOST, PORT ) ) == NULL ) {
  perror( "ldap_init" );
  return( -1 );
}

if ( ldap_get_option( ld, LDAP_X_OPT_CONNECT_TIMEOUT, &amp;timeout ) != LDAP_SUCCESS ) {
  rc = ldap_get_lderrno( ld, NULL, NULL);
  fprintf( stderr, "ldap_set_option: %s\n", ldap_err2string( rc ) );
  ldap_unbind( ld );
  return (rc);
}

switch( timeout ) {
  case LDAP_X_IO_TIMEOUT_NO_WAIT:
    printf("The connection is set to not block\n");
    break;

  case LDAP_X_IO_TIMEOUT_NO_TIMEOUT:
    printf("The connection is set to block indefinitely\n");
    break;

  default:
    printf("The connection timeout is set to %d seconds", (timeout/1000) );
    break;
}

...</pre>

<h3 id="errmsg">LDAP library/API Version Mismatch Error Messages</h3>

<p>Various macros and structures have been added to the SDK to allow
for compile-time and run-time discovery of the API version. Their
intended use is to allow you to ensure that you are compiling and
running with the correct version of the LDAP SDK for C. These features
are in line with the latest LDAP SDK for C API Internet Draft.</p>

<p>As a result of these changes, the command line tools bundled with
the LDAP SDK for C now check to ensure that they are running with the
correct version of the library. If your library path variable
(LD_LIBRARY_PATH on most Unix systems and the PATH variable on Windows
NT) is set so that an old version of the LDAP SDK for C library is in
use, then the command line tools can return one of the following error
messages:</p>

<pre>ldapsearch: unable to retrieve LDAP library version information; 
            this program requires an LDAP library that implements 
            revision 2003 or greater of the LDAP API. 

ldapsearch: this program requires an LDAP library that implements revision 
            2003 or greater of the LDAP API; running with revision 2002. 

ldapsearch: this program requires Mozilla's LDAP 
            library version 5.05 or greater; running with version 5.00.</pre>

<p>By default, the tools will exit if they see a mismatch in 
versions. To override the version mismatch, you can use 
<code>-0</code> option (zero, not 'o') with the tools, but results 
may vary.</p>

<h3 id="64bit">64-Bit Safe Changes</h3>

<p>Internal data types for <code>liblber</code> have been upgraded 
so that the data types are 64-bit safe. This is done in the 
following section of code in <code>lber.h</code>:</p>

<pre>/*
 * Implementation-specific integer data types.  If living in an LP64
 * environment (where sizeof(long) is 64 bits), we use unsigned ints;
 * otherwise we use unsigned longs.  The goal is to always use 32-bit
 * quantities and to also be backwards compatible with previous SDK
 * versions which used unsigned longs.
 */

#if defined(_LP64)
       typedef unsigned int ber_len_t;
       typedef          int ber_signed_len_t;
       typedef unsigned int ber_tag_t;
       typedef          int ber_int_t;
#else
       typedef unsigned long ber_len_t;
       typedef          long ber_signed_len_t;
       typedef unsigned long ber_tag_t;
       typedef          long ber_int_t;
#endif
</pre>

<p>This change makes <code>liblber</code> consistent between 
environments where <code>int</code> data types are 32 bits and those 
where they are 64 bits. However, this change may cause some 
compilers, especially c++ compilers where strong type checking is 
enforced, to emit warnings or errors when you recompile old code.</p>

<h3 id="parseurl">ldap_url_parse() with Space-Separated Lists of Hosts</h3>

<p>You can now pass <code>ldap_url_parse()</code> a string that uses 
the following format:</p>

<pre>ldap://host1:port1 host2:port2 host2:port3 ... hostn:portn/&lt;basedn&gt;</pre>

<p>Using this formatting, <code>ldap_url_parse()</code> will return 
results that are acceptable to <code>ldap_init()</code>. For example:</p>

<pre>LDAP *ld;
LDAPURLDesc *ludpp;
int res;

char *url = "ldap://phonebook.example.com:2389 directory.example.com:389/dc=example,dc=com";

res = ldap_url_parse(url, &amp;ludpp);
ld = ldap_init(ludpp-&gt;host, ludpp-&gt;port);
</pre>

<p>This input causes <code>ldap_init()</code> to try to connect to 
each host and port in the URL string until it finds a host with 
which it can connect.</p>

<p>Note that <code>ludpp-&gt;port</code> is set to the port 
identified on the last host in the URL string. If 
<code>ludpp-&gt;port</code> is used as shown here, then the last 
port identified on the URL string becomes the default port for any 
hosts for which a port is not explicitly set. Using the example 
above, suppose the URL string contained the following:</p>

<pre>ldap://phonebook.example.com phonebook2.example.com phonebook3.example.com:2389/dc=example,dc=com</pre>

<p>Here, <code>ldap_init()</code> would use port 2389 for all the 
hosts that it tries. If the last host in the string does not identify 
a port, then <code>ludpp-&gt;port</code> is set to zero (0). Setting 
the port to 0 tells <code>ldap_init()</code> to use the default 
port, which is 389 for <code>ldap://</code> urls and 636 for 
<code>ldaps://</code> urls.</p>


<h2 id="problems">Known problems</h2>

<p>Please use Bugzilla to find out about known problems and recent 
fixes.
<a href="https://bugzilla.mozilla.org/buglist.cgi?bug_status=NEW,ASSIGNED,REOPENED&product=Directory&component=LDAP+C+SDK&component=LDAP+Tools">List 
All Open LDAP C SDK bugs.</a>




<hr class="hide">
</div>
</div>
<div id="footer">
<ul>
<li><a href="../../sitemap.html">Site Map</a></li>
<li><a href="../../security/">Security Updates</a></li>
<li><a href="../../contact/">Contact Us</a></li>
<li><a href="../../foundation/donate.html">Donate</a></li>
</ul>
<p class="copyright">
Portions of this content are &copy; 1998&#8211;2009 by individual mozilla.org
contributors; content available under a Creative Commons license | <a
href="http://www.mozilla.org/foundation/licensing/website-content.html">Details</a>.</p>
<p>
<span>Last modified December  3,  2004</span>
<span><a href="http://bonsai-www.mozilla.org/cvslog.cgi?file=mozilla-org/html/directory/csdk-docs/Recent-Changes.htm&amp;rev=&amp;root=/www/">Document History</a></span>
</p>
</div>
</div>
</body>
</html>
