<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<link rel="top" title="Home" href="http://www.mozilla.org/">
<link rel="stylesheet" type="text/css" href="../../css/print.css"  media="print">
<link rel="stylesheet" type="text/css" href="../../css/base/content.css"  media="all">
<link rel="stylesheet" type="text/css" href="../../css/cavendish/content.css" title="Cavendish" media="screen">
<link rel="stylesheet" type="text/css" href="../../css/base/template.css"  media="screen">
<link rel="stylesheet" type="text/css" href="../../css/cavendish/template.css" title="Cavendish" media="screen">
<link rel="icon" href="../../images/mozilla-16.png" type="image/png">

 <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
 <title>Mozilla LDAP C SDK: Chapter 7 - Using Filter Configuration Files</title>
<script src="../../__utm.js" type="text/javascript"></script>
</head>
<body id="www-mozilla-org" class="deepLevel">
<div id="container">
<p class="important">You are currently viewing a snapshot of www.mozilla.org taken on April 21, 2008. Most of this content is
highly out of date (some pages haven't been updated since the project began in 1998) and exists for historical purposes only.  If
there are any pages on this archive site that you think should be added back to www.mozilla.org, please <a
href="https://bugzilla.mozilla.org/enter_bug.cgi?product=Websites&component=www.mozilla.org">file a bug</a>.</p>
<p class="skipLink"><a href="#mainContent" accesskey="2">Skip to main content</a></p>
<div id="header">
<h1><a href="/" title="Return to home page" accesskey="1">Mozilla</a></h1>
<ul>
<li id="menu_aboutus"><a href="../../about/" title="Getting the most out of your online experience">About</a></li>
<li id="menu_developers"><a href="../../developer/" title="Using Mozilla's products for your own applications">Developers</a></li>
<li id="menu_store"><a href="http://store.mozilla.org/?r=mozorg1" title="Shop for Mozilla products on CD and other merchandise">Store</a></li>
<li id="menu_support"><a href="../../support/" title="Installation, trouble-shooting, and the knowledge base">Support</a></li>
<li id="menu_products"><a href="../../products/" title="All software Mozilla currently offers">Products</a></li>
</ul>
<form id="searchbox_002443141534113389537:ysdmevkkknw" action="http://www.google.com/cse" title="mozilla.org Search">
<div>
<label for="q" title="Search mozilla.org's sites">search mozilla:</label>
<input type="hidden" name="cx" value="002443141534113389537:ysdmevkkknw">
<input type="hidden" name="cof" value="FORID:0">
<input type="text" id="q" name="q" accesskey="s" size="30">
<input type="submit" id="submit" value="Go">
</div>
</form>
</div>
<hr class="hide">
<div id="mBody">
<div id="side">

<ul id="nav">
<li><a title="Roadmap" href="../../roadmap.html"><strong> Roadmap</strong></a></li>
<li><a title="Projects" href="../../projects/"><strong> Projects</strong></a></li>
<li><a title="For developers" href="../../developer/"><strong> Coding</strong></a>
<ul>
<li><a title="Module Owners" href="../../owners.html"> Module Owners</a></li>
<li><a title="Hacking" href="../../hacking/"> Hacking</a></li>
<li><a title="Get the Source" href="http://developer.mozilla.org/en/docs/Download_Mozilla_Source_Code"> Get the Source</a></li>
<li><a title="Building Mozilla" href="http://developer.mozilla.org/en/docs/Build_Documentation"> Build It</a></li>
</ul>
</li>
<li><a title="Testing" href="../../quality/"><strong> Testing</strong></a>
<ul>
<li><a title="Downloads of mozilla.org software releases" href="../../download.html"> Releases</a></li>
<li><a title="Latest mozilla builds for testers" href="../../developer/#builds"> Nightly Builds</a></li>
<li><a title="For testers to report bugs" href="https://bugzilla.mozilla.org/"> Report A Problem</a></li>
</ul>
</li>
<li><a title="Tools for mozilla developers" href="../../tools.html"><strong> Tools</strong></a>
<ul>
<li><a title="Bug tracking system for mozilla testers." href="https://bugzilla.mozilla.org/"> Bugzilla</a></li>
<li><a title="Latest status of mozilla builds" href="http://tinderbox.mozilla.org/showbuilds.cgi?tree=Firefox"> Tinderbox</a></li>
<li><a title="Latest checkins" href="http://bonsai.mozilla.org/cvsqueryform.cgi"> Bonsai</a></li>
<li><a title="Source cross reference" href="http://lxr.mozilla.org/seamonkey/"> LXR</a></li>
</ul>
</li>
<li><a title="Frequently Asked Questions." href="../../faq.html"><strong> FAQs</strong></a></li>
</ul>

</div>
<hr class="hide">
<div id="mainContent">





<ul class="snav">
 <li><a href="search.htm">Previous</a>
 <li><a href="./">Contents</a>
 <li><a href="ix.htm">Index</a>
 <li><a href="addmod.htm">Next</a>
</ul>
 
<h1>Mozilla LDAP C SDK Programmer's Guide</h1>
<h2>Chapter 7 - Using Filter Configuration Files</h2>

<p>This chapter explains how to use API functions to work with filter 
configuration files. Filter configuration files can help simplify 
the process of selecting the appropriate search filter for a search 
request.</p>

<p>The chapter contains the following sections:</p>

<ul>
 <li><a href="filter.htm#understand_filter_config">Understanding Filter Configuration Files</a>
 <li><a href="filter.htm#understand_config_file">Understanding the Configuration File Syntax</a>
 <li><a href="filter.htm#understand_filter_param">Understanding Filter Parameters</a>
 <li><a href="filter.htm#load_filter_config">Loading a Filter Configuration File</a>
 <li><a href="filter.htm#retrieve_filter">Retrieving Filters</a>
 <li><a href="filter.htm#add_filter_prefix">Adding Filter Prefixes and Suffixes</a>
 <li><a href="filter.htm#free_filter_mem">Freeing Filters from Memory</a>
 <li><a href="filter.htm#create_filter">Creating Filters Programmatically</a>
</ul>

<h3 id="understand_filter_config">Understanding Filter Configuration Files</h3>

<p>Suppose that you are writing a client that allows users to search 
the directory. You might want to use different search filters 
tailored for specific types of search criteria. For example, suppose 
the user wants to search for this:<br>
<code>bjensen@example.com</code></p>

<p>You might want to use this search filter:<br>
<code>(mail=bjensen@example.com)</code></p>

<p>Similarly, suppose the search term entered by the user contains 
numbers, like this:<br>
<code>555-1212</code></p>

<p>In this case, you might want to use this search filter:<br>
<code>(telephoneNumber=555-1212)</code></p>

<p>Rather than write code to find and select the appropriate filter 
(based on the user's search criteria), you can include the filters 
in a filter configuration file.</p>

<p>A <strong>filter configuration file</strong> contains a list of 
filters that you can load and use in your searches.</p>

<h3 id="understand_config_file">Understanding the Configuration File Syntax</h3>

<p>A filter configuration file has the following format:</p>

<pre>tag
 pattern1  delimiters  filter1-1 desc1-1 [scope]
 filter1-2  desc1-2              [scope]
 pattern2  delimiters  filter2-1 desc2-1 [scope]
...</pre>

<p>This format is explained below:</p>

<ul>
 <li>
  <code>tag</code> identifies a group of filters. You can use 
  different tags to distinguish filters for different types of 
  objects. For example, you can use a tag to represent filters for 
  person entries, a tag to represent filters for organization 
  entries, and so on:

<pre>"people"  ... (filters for searching "person" entries) ...
"organization"  (filters for "organization" entries) ...</pre>

  When you call functions like 
  <code><a href="function.htm#getfirstfilter">ldap_getfirstfilter()</a></code> 
  to retrieve a filter, you can specify a tag (or part of a tag) as 
  a parameter. The tag narrows the list of filters that the function 
  can retrieve.
 <li>
  <code>pattern1</code> and <code>pattern2</code> are regular 
  expressions used to determine which filter is selected, based on 
  the search criteria. For example, if you specify 
  "<code>^[0-9]</code>" as the pattern for a filter, the filter is 
  selected for all search criteria beginning with a number.
  <p></p>
  <code>"people" "^[0-9]"   ...</code>
  <p></p>
  For more information on regular expressions, consult your UNIX 
  documentation (for example, documentation on the <code>ed</code> 
  command contains some information on regular expressions).
 <li>
  <code>delimiters</code> specifies the delimiters used to 
  distinguish one field from another within the search criteria. For 
  example, if the search criteria consists of a city name and state 
  abbreviation separated by a comma, specify "<code>,</code>" as the 
  delimiter.
 <li>
  <code>filter1-1</code>, <code>filter1-2</code>, and 
  <code>filter2-1</code> are filters. Use <code>%v</code> to 
  represent the search criteria. For example, to search e-mail 
  addresses, use the filter <code>(mail=%v)</code>. During runtime, 
  if the search criteria <code>bjensen@example.com</code> is 
  entered, the filter becomes <code>(mail=bjensen@example.com)</code>.
  <p></p>
  If the search criteria consists of a number of delimited fields 
  (for example, a "<em>last name, first name</em>" format like 
  "<code>Jensen, Barbara</code>"), use 
  <code>%v1, %v2, ... , %vn</code> to represent the different fields 
  within the search criteria. For example:
  <p></p>
  <code>"people" "^[A-Z]*,"   ","  (&amp;(sn=%v1)(givenName=%v2))</code>
  <p></p>
  In this example, the delimiter is a comma. The word before the 
  delimiter replaces <code>%v1</code> in the filter, and the word 
  after the delimiter replaces <code>%v2</code> in the filter. If 
  the user searches for:
  <p></p>
  <code>Jensen, Barbara</code>
  <p></p>
  the resulting filter is:
  <p></p>
  <code>(&amp;(sn=Jensen)(givenName=Barbara))</code>
  <p></p>
  You can also specify ranges of fields. For example, to specify the 
  values in the first three fields, use <code>%v1-3</code>. To 
  specify values from the third field to the last field, use 
  <code>%v3-</code>. To specify the value in the last field, use 
  <code>%v$</code>.
 <li>
  <code>desc1-1</code>, <code>desc1-2</code>, and 
  <code>desc2-1</code> are phrases briefly describing the filters.
</ul>

<p>For example, the following section of a filter configuration file 
specifies a filter for telephone numbers and two filters for email 
addresses. The telephone number filter is used if the search 
criteria contains one or more numbers. The email filters are used if 
the search criteria contains an "at" sign (<code>@</code>).</p>

<pre>"people"
 "^[0-9][0-9-]*$"     "
 "(telephoneNumber=*%v))"  "phone number ends with"
 "@"  " " "(mail=%v)"  "email address is"
 "(mail=%v*)"         "email address starts with"</pre>

<p>You should specify the filters in the order that you want them to 
be used. For example, if you want to apply the 
<code>(mail=%v)</code> filter before the <code>(mail=%v*)</code> 
filter, make sure that the filters appear in that order.</p>

<h3 id="understand_filter_param">Understanding Filter Parameters</h3>

<p>Within a filter, you can use the following parameters:</p>

<ul>
 <li>
  <code>%v</code>
  <p></p>
  This parameter means that the entire search criteria is inserted 
  in place of <code>%v</code>. For example, if the filter is 
  <code>(mail=%v)</code>, entering the word <code>jensen</code> 
  results in the filter <code>(mail=jensen)</code>.
 <li>
  <code>%v$</code>
  <p></p>
  This parameter means that the last word in the search criteria is 
  inserted in place of <code>%v</code>. For example, if the filter 
  is <code>(sn=%v)</code>, entering the words <code>Barbara 
  Jensen</code> results in the filter <code>(sn=Jensen)</code>.
 <li>
  <code>%vN</code>
  <code>N</code> is a single digit between 1 and 9. This parameter 
  means that the <code>N</code>th word in the search criteria is 
  inserted in place of <code>%vN.</code> For example, if the filter 
  is <code>(sn=%v2)</code>, entering the words <code>Barbara 
  Jensen</code> results in the filter <code>(sn=Jensen)</code>.
 <li>
  <code>%vM-N</code>
  <p></p>
  <code>M</code> and <code>N</code> are single digits between 1 and 
  9. This parameter means that the sequence of the <code>M</code>th 
  through the <code>N</code>th words in the search criteria is 
  inserted in place of <code>%vM-N.</code> For example, if the 
  filter is <code>(cn=%v1-2)</code>, entering the words 
  <code>Barbara Jensen</code> results in the filter 
  <code>(cn=Barbara Jensen)</code>.
 <li>
  <code>%vN-</code>
  <code>N</code> is a single digit between 1 and 9. This parameter 
  means that the sequence of the <code>N</code>th through the last 
  words in the search criteria is inserted in place of 
  <code>%vN-</code>. For example, if the filter is 
  <code>(cn=%v2-)</code>, entering the words 
  <code>Ms. Barbara Jensen</code> results in the filter 
  <code>(cn=Barbara Jensen)</code>.
</ul>

<h3 id="load_filter_config">Loading a Filter Configuration File</h3>

<p>To load a filter configuration file, call the 
<code><a href="function.htm#init-getfilter">ldap_init_getfilter()</a></code> 
function.</p>

<p>You can also read the filter configuration file from a buffer in 
memory by calling the 
<code><a href="function.htm#init-getfilter-buf">ldap_init_getfilter_buf()</a></code> 
function.</p>

<p>Both functions return a pointer to an 
<code><a href="datatype.htm#LDAPFiltDesc">LDAPFiltDesc</a></code> 
structure, which contains information about the filter. If an error 
occurs, both functions return <code>NULL</code>.</p>

<h3 id="retrieve_filter">Retrieving Filters</h3>

<p>After loading a filter configuration file into memory, you can 
retrieve filters based on the search criteria. For example, if the 
search criteria is an e-mail address 
(<code>bjensen@example.com</code>), you can have your client 
automatically search for this value in the <code>mail</code> 
attribute of <code>person</code> entries.</p>

<p>To retrieve the first filter that matches the search criteria, 
call the 
<code><a href="function.htm#getfirstfilter">ldap_getfirstfilter()</a></code> 
function.</p>

<p>To get the next filter that matches the search criteria, call the 
<code><a href="function.htm#getnextfilter">ldap_getnextfilter()</a></code> 
function.</p>

<p>Both functions return a pointer to an 
<code><a href="datatype.htm#LDAPFiltInfo">LDAPFiltInfo</a></code> 
structure, which contains information about the filter.</p>

<p>The following section of code uses a filter configuration file 
containing the following filters:</p>

<pre>"people"
 "^[0-9][0-9-]*$"    "
 "(telephoneNumber=*%v))"  "phone number ends with"
 "@"  " " "(mail=%v)"  "email address is"
 "(mail=%v*)"         "email address starts with"</pre>

<p>This section of code retrieves filters that match the search 
criteria.</p>

<p>
 <strong>Code Example 7-1 - Retrieving configuration filters</strong>
</p>

<pre class="code">#include &lt;stdio.h&gt;
#include &lt;ldap.h&gt;
...
LDAP     *ld;
LDAPMessage  *result, *e;
BerElement  *ber;
char     *a, *dn;
char     **vals;
int i;
LDAPFiltDesc *ldfp;
LDAPFiltInfo *ldfi;
char buf[ 80 ]; /* contains the search criteria */
int found;
...
/* Load the filter configuration file into an LDAPFiltDesc structure. */
if ( ( ldfp = ldap_init_getfilter( "myfilters.conf" ) ) == NULL ) {
 perror( "Cannot open filter configuration file" );
}

/* Select a filter to use when searching for the value in buf.
Use filters under the "people" tag in the filter configuration file. */
found = 0;
for ( ldfi = ldap_getfirstfilter( ldfp, "people", buf ); ldfi != NULL; 
 ldfi = ldap_getnextfilter( ldfp ) ) {

 /* Use the selected filter to search the directory. */
 if ( ldap_search_s( ld, "dc=example,dc=com", ldfi-&gt;lfi_scope, 
  ldfi-&gt;lfi_filter, NULL, 0, &amp;result ) != LDAP_SUCCESS ) {
  ldap_perror( ld, "ldap_search_s" );
  return( 1 );
 } else {

  /* Once a filter gets results back, stop iterating through 
  the different filters. */ 
  if ( ( found = ldap_count_entries( ld, result ) &gt; 0 ) ) {
   break;
  } else { 
   ldap_msgfree( result );
  }
 }
}

if ( found == 0 ) {
 printf( "No matching entries found.\n" );
} else {
 printf( "Found %d match%s where %s \"%s\"\n\n", found, 
  found == 1 ? "" : "es", ldfi-&gt;lfi_desc, buf );
}

ldap_msgfree( result );
ldap_getfilter_free( ldfp );
...</pre>

<p>Suppose that the search criteria is 
<code>bjensen@example.com</code> and the client application finds 
one matching entry. In this case, the application prints the 
following output:<br>
<code>Found 1 match where email address is bjensen@example.com</code>

<h3 id="add_filter_prefix">Adding Filter Prefixes and Suffixes</h3>

<p>If you need to apply a filter to all searches, you can add a 
filter prefix and suffix to all filters (rather than add the 
criteria to all filters). For example, if your client searches only 
for person entries, you can add the following filter prefix to 
restrict the search:<br>
<code>(&amp;(objectClass=person)</code></p>

<p>Note that this filter now requires a suffix ")" to balance the 
number of parentheses. This prefix is automatically added to any 
filter retrieved through the 
<code><a href="function.htm#getfirstfilter">ldap_getfirstfilter()</a></code> 
and <code><a href="function.htm#getnextfilter">ldap_getnextfilter()</a></code> 
functions. (See <a href="filter.htm#retrieve_filter">"Retrieving Filters"</a> 
for details.) For example, suppose you use this filter in a filter 
configuration file:<br>
<code>(cn=Babs Jensen)</code></p>

<p>If you retrieve this filter through the 
<code>ldap_getfirstfilter()</code> or 
<code>ldap_getnextfilter()</code> function, you get the following 
filter:<br>
<code>(&amp;(objectClass=person)(cn=Babs Jensen))</code></p>

<p>To add a prefix and suffix automatically to all filters retrieved 
from the filter configuration file, call the 
<code><a href="function.htm#set-filter-additions">ldap_set_filter_additions()</a></code> 
function.</p>

<p>The following section of code loads the filter configuration file 
named <code>myfilters.conf</code> into memory and adds the prefix 
<code>(&amp;(objectClass=person)</code> and the suffix 
"<code>)</code>" to each filter retrieved:</p>

<p>
 <strong>Code Example 7-2 - Adding prefixes and suffixes</strong>
</p>

<pre class="code">...
LDAPFiltDesc *lfdp;
char *filter_file = "myfilters.conf"; 
char *prefix = "(&amp;(objectClass=person)";
char *suffix = ")";
...
lfdp = ldap_init_getfilter( filter_file );
ldap_setfilteraffixes( lfdp, prefix, suffix );
...</pre>

<h3 id="free_filter_mem">Freeing Filters from Memory</h3>

<p>When you complete your search, you should free the 
<code><a href="datatype.htm#LDAPFiltDesc">LDAPFiltDesc</a></code> structure 
from memory. To free the <code>LDAPFiltDesc</code> structure, call 
the <code><a href="function.htm#getfilter-free">ldap_getfilter_free()</a></code> 
function.</p>

<p>The following section of code frees the <code>LDAPFiltDesc</code> 
structure from memory after all searches are completed.</p>

<p><strong>Code Example 7-3 - Freeing filters from memory</strong></p>

<pre class="code">...
LDAPFiltDesc *lfdp;
char *filter_file = "myfilters.conf";
...
/* Read the filter configuration file into an LDAPFiltDesc structure. */
lfdp = ldap_init_getfilter( filter_file );
...
/* Retrieve filters and perform searches. */
...
/* Free the configuration file (the LDAPFiltDesc structure). */
ldap_getfilter_free( lfdp );
...</pre>

<h3 id="create_filter">Creating Filters Programmatically</h3>

<p>You can build your own filters by calling the 
<code><a href="function.htm#create-filter">ldap_create_filter()</a></code> 
function.</p>

<p>The following section of code builds the filter 
<code>(mail=bjensen@example.com)</code>.</p>

<p><strong>Code Example 7-4 - Creating filters</strong></p>

<pre class="code">char *pattern = "(%a=%v);
char *attr = "mail";
char *value = "bjensen@example.com";
...
ldap_create_filter( buf, LDAP_FILT_MAXSIZ, pattern, NULL, NULL, attr, 
  value, NULL );
...</pre>




<hr class="hide">
</div>
</div>
<div id="footer">
<ul>
<li><a href="../../sitemap.html">Site Map</a></li>
<li><a href="../../security/">Security Updates</a></li>
<li><a href="../../contact/">Contact Us</a></li>
<li><a href="../../foundation/donate.html">Donate</a></li>
</ul>
<p class="copyright">
Portions of this content are &copy; 1998&#8211;2009 by individual mozilla.org
contributors; content available under a Creative Commons license | <a
href="http://www.mozilla.org/foundation/licensing/website-content.html">Details</a>.</p>
<p>
<span>Last modified March 16,  2005</span>
<span><a href="http://bonsai-www.mozilla.org/cvslog.cgi?file=mozilla-org/html/directory/csdk-docs/filter.htm&amp;rev=&amp;root=/www/">Document History</a></span>
</p>
</div>
</div>
</body>
</html>
