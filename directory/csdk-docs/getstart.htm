<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<link rel="top" title="Home" href="http://www.mozilla.org/">
<link rel="stylesheet" type="text/css" href="../../css/print.css"  media="print">
<link rel="stylesheet" type="text/css" href="../../css/base/content.css"  media="all">
<link rel="stylesheet" type="text/css" href="../../css/cavendish/content.css" title="Cavendish" media="screen">
<link rel="stylesheet" type="text/css" href="../../css/base/template.css"  media="screen">
<link rel="stylesheet" type="text/css" href="../../css/cavendish/template.css" title="Cavendish" media="screen">
<link rel="icon" href="../../images/mozilla-16.png" type="image/png">

 <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
 <title>Mozilla LDAP C SDK: Chapter 1 - The Mozilla LDAP C SDK</title>
<script src="../../__utm.js" type="text/javascript"></script>
</head>
<body id="www-mozilla-org" class="deepLevel">
<div id="container">
<p class="important">You are currently viewing a snapshot of www.mozilla.org taken on April 21, 2008. Most of this content is
highly out of date (some pages haven't been updated since the project began in 1998) and exists for historical purposes only.  If
there are any pages on this archive site that you think should be added back to www.mozilla.org, please <a
href="https://bugzilla.mozilla.org/enter_bug.cgi?product=Websites&component=www.mozilla.org">file a bug</a>.</p>
<p class="skipLink"><a href="#mainContent" accesskey="2">Skip to main content</a></p>
<div id="header">
<h1><a href="/" title="Return to home page" accesskey="1">Mozilla</a></h1>
<ul>
<li id="menu_aboutus"><a href="../../about/" title="Getting the most out of your online experience">About</a></li>
<li id="menu_developers"><a href="../../developer/" title="Using Mozilla's products for your own applications">Developers</a></li>
<li id="menu_store"><a href="http://store.mozilla.org/?r=mozorg1" title="Shop for Mozilla products on CD and other merchandise">Store</a></li>
<li id="menu_support"><a href="../../support/" title="Installation, trouble-shooting, and the knowledge base">Support</a></li>
<li id="menu_products"><a href="../../products/" title="All software Mozilla currently offers">Products</a></li>
</ul>
<form id="searchbox_002443141534113389537:ysdmevkkknw" action="http://www.google.com/cse" title="mozilla.org Search">
<div>
<label for="q" title="Search mozilla.org's sites">search mozilla:</label>
<input type="hidden" name="cx" value="002443141534113389537:ysdmevkkknw">
<input type="hidden" name="cof" value="FORID:0">
<input type="text" id="q" name="q" accesskey="s" size="30">
<input type="submit" id="submit" value="Go">
</div>
</form>
</div>
<hr class="hide">
<div id="mBody">
<div id="side">

<ul id="nav">
<li><a title="Roadmap" href="../../roadmap.html"><strong> Roadmap</strong></a></li>
<li><a title="Projects" href="../../projects/"><strong> Projects</strong></a></li>
<li><a title="For developers" href="../../developer/"><strong> Coding</strong></a>
<ul>
<li><a title="Module Owners" href="../../owners.html"> Module Owners</a></li>
<li><a title="Hacking" href="../../hacking/"> Hacking</a></li>
<li><a title="Get the Source" href="http://developer.mozilla.org/en/docs/Download_Mozilla_Source_Code"> Get the Source</a></li>
<li><a title="Building Mozilla" href="http://developer.mozilla.org/en/docs/Build_Documentation"> Build It</a></li>
</ul>
</li>
<li><a title="Testing" href="../../quality/"><strong> Testing</strong></a>
<ul>
<li><a title="Downloads of mozilla.org software releases" href="../../download.html"> Releases</a></li>
<li><a title="Latest mozilla builds for testers" href="../../developer/#builds"> Nightly Builds</a></li>
<li><a title="For testers to report bugs" href="https://bugzilla.mozilla.org/"> Report A Problem</a></li>
</ul>
</li>
<li><a title="Tools for mozilla developers" href="../../tools.html"><strong> Tools</strong></a>
<ul>
<li><a title="Bug tracking system for mozilla testers." href="https://bugzilla.mozilla.org/"> Bugzilla</a></li>
<li><a title="Latest status of mozilla builds" href="http://tinderbox.mozilla.org/showbuilds.cgi?tree=Firefox"> Tinderbox</a></li>
<li><a title="Latest checkins" href="http://bonsai.mozilla.org/cvsqueryform.cgi"> Bonsai</a></li>
<li><a title="Source cross reference" href="http://lxr.mozilla.org/seamonkey/"> LXR</a></li>
</ul>
</li>
<li><a title="Frequently Asked Questions." href="../../faq.html"><strong> FAQs</strong></a></li>
</ul>

</div>
<hr class="hide">
<div id="mainContent">





<ul class="snav">
 <li><a href="int_part.htm">Previous</a>
 <li><a href="index.html">Contents</a>
 <li><a href="ix.htm">Index</a>
 <li><a href="ldap.htm">Next</a>
</ul>
 
<h1>Mozilla LDAP C SDK Programmer's Guide</h1>
<h2>Chapter 1 - The Mozilla LDAP C SDK</h2>

<p>This chapter introduces the Lightweight Directory Access Protocol 
(LDAP) Application Programming Interface (API) and describes the 
Mozilla LDAP C SDK.</p>

<p>This chapter contains the following sections:</p>

<ul>
 <li><a href="getstart.htm#ldap_api">The LDAP API</a>
 <li><a href="getstart.htm#files_provided_sdk">Files Provided With the LDAP C SDK</a>
 <li><a href="getstart.htm#compile_ldap_client">Compiling LDAP Clients</a>
 <li><a href="getstart.htm#run_ldap_app">Running LDAP Application Programs</a>
 <li><a href="getstart.htm#example_program">The Example Programs</a>
</ul>

<h3 id="ldap_api">The LDAP API</h3>

<p>The <em><a href="../ietf-docs/draft-ietf-ldapext-ldap-c-api-05.txt">The 
C LDAP Application Program Interface Internet Draft</a></em> defines 
a set of API functions that you can use to build LDAP-enabled 
clients. The functionality implemented in this SDK closely follows 
the interfaces outlined in the Internet Draft, which should become 
an RFC someday. Using the functionality provided with this SDK, you 
can enable your clients to connect to LDAPv3-compliant servers and 
perform standard LDAP functions. Among other things, with this SDK 
you can:</p>

<ul>
 <li>Search for and retrieving a list of entries.
 <li>Ad new entries (modify) the database.
 <li>Update existing entries.
 <li>Delete entries.
 <li>Rename entries.
</ul>

<p>For example, if you are writing an email application, you can use 
the functions in the LDAP API to retrieve email addresses from an 
LDAP server.</p>

<p>The API functions allow you to perform LDAP operations 
synchronously or asynchronously.</p>

<ul>
 <li>
 You can call a synchronous function if you want to wait for the 
 operation to complete before receiving the return value of a 
 function.
 <li>
 If you want to perform other work while waiting for an operation to 
 complete, you can call an asynchronous function and poll the LDAP 
 client library to check the status of the operation.
</ul>

<p>The LDAP API also includes functionality defined in LDAPv3. For 
example, you can call functions to request extended operations from 
an LDAPv3 server.</p>

<p>Subsequent chapters in this manual explain how to use the LDAP 
API functions contained in the LDAP C SDK. For a complete list of 
the functions implemented in this SDK, refer to 
<a href="function.htm">Chapter 18 - Function Reference</a>.</p>

<h3 id="files_provided_sdk">Files Provided With the LDAP C SDK</h3>

<p>The Mozilla LDAP C SDK is a Software Development Kit (SDK) that 
contains C header files, C libraries, tools, and example programs. 
To install a binary release of the SDK, you download the compressed 
SDK package and unpack the files to the directory of your choice. 
When you unpack the SDK, it will create several directories and 
populate them with the various files provided with the SDK. The 
directories and files supplied with the SDK are detailed in the 
sections below.</p>

<h3 id="directory_install">Directories Installed With the SDK</h3>

<p>The LDAP C SDK installation process creates several directories. 
These directories are populated with the files provided by the SDK. 
The table below outlines the directories that are created by the 
installation process:</p>

<p><strong>Table 1-1 - LDAP C SDK directories</strong></p>

<table class="data">
 <tr>
  <th>Directory</th>
  <th>Description</th>
 </tr>
 <tr>
   <td><code>include</code></td>
   <td>
   your client source files, you must include the files contained in 
   this directory as described in the section 
   <a href="getstart.htm#header_supply">"Header Files Supplied with the LDAP 
   C SDK."</a>
  </td>
 </tr>
 <tr>
  <td><code>lib</code></td>
  <td>
   This directory contains the C library files provided with the 
   LDAP C SDK. For details on these files, see the section 
   <a href="getstart.htm#library_supply">"Libraries Supplied with the LDAP C 
   SDK."</a>
  </td>
 </tr>
 <tr>
  <td><code>examples</code></td>
  <td>
   This directory contains sample source code and makefiles for LDAP 
   clients. See the <code>README</code> file in this directory for 
   information about building these client programs.
  </td>
 </tr>
 <tr>
  <td><code>tools</code></td>
  <td>
   This directory contains the LDAP command-line tools. These are 
   similar to the tools provided with the Netscape Directory Server 
   and are described in the Netscape Directory Server <em>Command 
   and File Reference</em> (see 
   <code><a href="http://enterprise.netscape.com/docs/directory/index.html">http://enterprise.netscape.com/docs/directory/index.html</a></code> 
   for details).
   <p></p>
   Note that in order to use these applications, you need to make 
   sure that the application can find the LDAP API shared library or 
   dynamic link library, as described in the section 
   <a href="getstart.htm#library_supply">"Libraries Supplied with the LDAP 
   C SDK."</a>
  </td>
 </tr>
 <tr>
  <td><code>docs</code></td>
  <td>
   Initially this directory contains only the README file that is 
   shipped with this version of the SDK. However, the directory is 
   intended as a location for this guide (the <em>LDAP C SDK 
   Programmer's Guide</em>) and the associated product Release 
   Notes, which you can download from the web site as detailed in 
   the README file.
  </td>
 </tr>
</table>

<h3 id="header_supply">Header Files Supplied with the LDAP C SDK</h3>

<p>The Mozilla LDAP C SDK ships with the following header files:</p>

<p>
 <strong>Table 1-2 - Header files shipped with the LDAP C SDK</strong>
</p>

<table class="data">
 <tr>
  <th>Header File</th>
  <th>Description</th>
 </tr>
 <tr>
  <td><code>lber.h</code></td>
  <td>
   Prototypes the standard Basic Encoding Rules (BER) functions, 
   structures and defines for the LDAP SDK.
  </td>
 </tr>
 <tr>
  <td><code>ldap.h</code></td>
  <td>
   Prototypes for the standard functions, structures, and defines 
   contained in the LDAP SDK.
  </td>
 </tr>
 <tr>
  <td><code>ldap_ssl.h</code></td>
  <td>
   Prototypes for the SSL functions, structures, and defines 
   contained in the LDAP SDK.
  </td>
 </tr>
 <tr>
  <td><code>ldappr.h</code></td>
  <td>
   Prototypes the functions, structures, and defines contained in 
   the Netscape Portable Runtime (NSPR) for the LDAP SDK.
  </td>
 </tr>
</table>

<h3 id="library_supply">Libraries Supplied with the LDAP C SDK</h3>

<p>The Mozilla LDAP C SDK comes with several different library sets. 
The specific library files that you link with depend on the type of 
application(s) you are building. Table 1-3 outlines the library files 
provided with the Mozilla LDAP C SDK:</p>

<p><strong>Table 1-3 - Library files shipped with the LDAP C SDK</strong>
</p>

<table class="data">
 <tr>
  <th>Library File</th>
  <th>Description</th>
 </tr>
 <tr>
  <td><code>libldap50.so</code></td>
  <td>The SSL-enabled library for Solaris, AIX, and Linux.</td>
 </tr>
 <tr>
  <td><code>libnspr4.so</code></td>
  <td>
   Library containing the core Netscape Portable Runtime (NSPR) 
   functions.
  </td>
 </tr>
 <tr>
  <td><code>libldap50.sl</code></td>
  <td>The SSL-enabled library for HP-UX.</td>
 </tr>
 <tr>
  <td><code>libnspr4.sl</code></td>
  <td>Library containing the core NSPR functions for HP-UX.</td>
 </tr>
 <tr>
  <td><code>nsldap32v50.dll</code></td>
  <td>The SSL-enabled DLL library for 32-bit Microsoft Windows.</td>
 </tr>
 <tr>
  <td><code>nsldap32v50.lib</code></td>
  <td>The SSL-enabled import library for 32-bit Microsoft Windows.</td>
 </tr>
 <tr>
  <td><code>libnspr4.dll</code></td>
  <td>
   Library containing the core NSPR functions, utilizes Microsoft 
   fibers (specific to Windows NT and Windows 2000).
  </td>
 </tr>
 <tr>
  <td><code>nspr4.dll</code></td>
  <td>Library containing the core NSPR functions.</td>
 </tr>
 <tr>
  <td><code><code>nsldap32v50bc.lib</td>
  <td>
   The standard import library for 32-bit Microsoft Windows, to be 
   used with Borland compilers. This library is not is not 
   officially supported at this time.
  </td>
 </tr>
</table>

<h3 id="tools_supply">Tools Supplied With the LDAP C SDK</h3>

<p>The LDAP C SDK includes the following utilities that help you to 
work with LDAP data sets:</p>

<p>
 <strong>Table 1-4 - Utilities supplied with the LDAP C SDK</strong>
</p>

<table class="data">
 <tr>
  <th>Utility</th>
  <th>Description</th>
 </tr>
 <tr>
  <td><code>ldapmodify</code></td>
  <td>Lets you modify, add, delete, or rename directory entries.</td>
 </tr>
 <tr>
  <td><code>ldapsearch</code></td>
  <td>
   Lets you search for directory entries and display attributes and 
   values found.
  </td>
 </tr>
 <tr>
  <td><code>ldapdelete</code></td>
  <td>Lets you delete existing directory entries.</td>
 </tr>
 <tr>
  <td><code>ldapcmp</code></td>
  <td>Lets you compare entries between directory servers.</td>
 </tr>
</table>

<p>A list of options for each utility can be obtained by typing the 
utility name at the command line. For detailed documentation on 
these utilities, refer to the <em>Command and File Reference</em> 
shipped with the Netscape Directory Server.</p>

<h3 id="compile_ldap_client">Compiling LDAP Clients</h3>

<p>The Mozilla LDAP C SDK includes the header files and libraries 
for the LDAP API functions. You can include these header files and 
link to these libraries to enable your application to use LDAP.</p>

<h3 id="include_header">Including the LDAP Header File</h3>

<p>To make use of the functions contained in the LDAP SDK, whether 
you are developing on UNIX or in a 32-bit Windows system, you must 
include the <code>ldap.h</code> header file in your C source files. 
The following line of code shows as shown in the following line 
of code:</p>

<code>#include "ldap.h"</code>

<p>The <code>ldap.h</code> header file declares the functions and 
structures contained in the LDAP API.</p>

<p>You do not need to explicitly include the <code>lber.h</code> 
header file; <code>lber.h</code> is already included in 
<code>ldap.h</code>.</p>

<p>If you are calling the LDAP SSL functions, you also need to 
include the <code>ldap_ssl.h</code> header file, as follows:</p>

<code>#include "ldap_ssl.h"</code>

<p>To make use of the Netscape Portable Runtime (NSPR) with your 
LDAP applications, you must include <code>ldappr.h</code> (this 
header file contains the prototypes for functions that tie the LDAP 
libraries to NSPR). You can find more information on NSPR in the 
<code>ldappr.h</code> header file and at the following URL:</p>

<code><a href="http://www.mozilla.org/projects/nspr">http://www.mozilla.org/projects/nspr</a></code>

<h3 id="compile_unix">Compiling Clients on UNIX</h3>

<p>The Mozilla LDAP C SDK has an <code>include</code> directory that 
contains C header files and a <code>lib</code> directory that 
contains the shared libraries and objects to which you must link.</p>

<p>When compiling clients on UNIX platforms, you need to link to the 
appropriate LDAP API shared library. On Solaris, AIX, Linux, and 
OSF, the shared library is <code>libldap50.so</code>. On HP-UX, the 
library is named <code>libldap50.sl</code>. For example, on Solaris, 
you would use the following link option:</p>

<code>-L../lib -lldap50</code>

<p>Refer to the <code>Makefile</code> in the <code>examples</code> 
directory for details on compiling your applications.</p>

<p>The NSPR libraries are now distributed with the LDAP C SDK. When 
linking with the SSL-enabled applications, you must also link with 
the NSPR libraries. For more information on the NSPR libraries, 
refer to the documentation at the following URL (follow the 
"Documentation and Training" link): <br>
<code><a href="http://www.mozilla.org/projects/nspr/">http://www.mozilla.org/projects/nspr/</a></code></p>

<p>If you linked the shared library, you need to make sure that the 
LDAP client can find the library. Do one of the following:</p>

<ul>
 <li>
  Make sure that the LDAP API shared library file (such as 
  <code>libldap50.so</code>for Solaris) is in a standard location, 
  as in <code>/usr/lib</code>. Alternatively, you can use 
  environment variables to specify the library location.
 <li>
  On some platforms, if you have compiled your client with certain 
  flags set, you can set an environment variable to specify the 
  run-time path to check when loading libraries. If you do this, 
  you can set this variable to the location of the LDAP library.
  <p>For example, on Solaris and Linux, you can use the 
  <code>LD_LIBRARY_PATH</code>environment variable. On HP-UX, you 
  can use the <code>SHLIB_PATH</code> environment variable if you 
  use the <code>-Wl,+s+b</code> flag when compiling and linking. On 
  AIX, you can use the <code>LIBPATH</code> environment variable.
 <li>
  Use a link flag that specifies the path where the executable can 
  find the library. For example, on Solaris, you can use the 
  <code>-R</code> flag to specify the path where the executable can 
  find the library.
</ul>

<p>See the makefile in the <code>examples</code> directory for 
examples of additional flags and defines that you might need to 
specify when compiling and linking your LDAP client. Different 
platforms might require different sets of define statements.</p>

<h3 id="compile_windows">Compiling Clients on Windows Systems</h3>

<p>When compiling clients on Windows systems (Windows NT, Windows 2000, 
Windows 9x, Windows XP, and Windows ME), make sure to define 
<code>_CONSOLE</code> if you are writing a console application, or 
<code>_WINDOWS</code> if you are writing a standard Windows GUI 
application.</p>

<p>Make sure to link to the LDAP API import library. The name of the 
library is <code>nsldap32v50.lib</code> for Microsoft compilers.</p>

<p>Make sure to copy the <code>nsldap32v50.dll</code> dynamic link 
library to a directory where your client can find it.</p>

<p>Some products servers (such as the Netscape Directory Server) 
might install a different version of the <code>nsldap32v50.dll</code> 
in the Windows <code>system32</code> directory. Make sure that your 
client finds the version of the DLL that is included with the 
Mozilla LDAP C SDK before finding the version in the 
<code>system32</code> directory. For example, you can copy the SDK 
DLL to the same directory as your client application.</p>

<p>During run-time, your client searches for the LDAP API dynamic 
link library in the following locations:</p>

<ol>
 <li>The directory from which the application loaded.
 <li>The current directory.
 <li>
  The Windows system directory, typically <code>winnt\system32</code>.
  <p></p>
  Note that a version of the LDAP API DLL may already exist in this 
  directory. For example, other software packages might install a 
  different version of this DLL. To avoid potential conflicts, you 
  should not install the DLL in this directory.
 <li>The Windows directory.
 <li>
  The directories listed in the <code>PATH</code> environment 
  variable.
</ol>

<h3 id="run_ldap_app">Running LDAP Application Programs</h3>

<p>When you run LDAP clients on UNIX or Windows system, you must 
ensure that the operating system can find the libraries that support 
the LDAP functions that are called by your application. On UNIX, 
these files are called shared objects; on Windows, they are call 
Dynamic Link Libraries. Generally, these files are referred to as 
runtime libraries.</p>

<h3 id="unix_runtime_lib">The UNIX Runtime Library Files</h3>

<p>On Unix systems (such as Solaris, AIX, and HP-UX), the library 
files consist of a shared object library. When running clients built 
with these libraries, make sure to set the appropriate environment 
variable that specifies the run-time path used to find libraries.</p>

<p>For example, on Solaris and Linux, set the 
<code>LD_LIBRARY_PATH</code> environment variable to the location of 
the shared library. On HP-UX, set the <code>SHLIB_PATH</code> 
environment variable if you are using the <code>-Wl,+s+b</code> flag 
to compile your client application. On AIX, set the 
<code>LIBPATH</code> environment variable.</p>

<h3 id="windows_runtime_lib">The Windows Runtime Library Files</h3>

<p>For Windows applications, the library files include an import 
library and a dynamic link library. When running clients built with 
these libraries, make sure to copy the dynamic link library to the 
directory containing your client or copy it to a location where the 
DLL can be found by the operating system.</p>

<h3 id="example_program">The Example Programs</h3>

<p>The Mozilla LDAP C SDK ships with several examples that 
demonstrate the use of the functions contained in the LDAP C SDK 
library. This code was tested on a Solaris 2.6 machine and on a 
Windows NT 4.0 machine with Microsoft Visual C++ 6.0 SP3.</p>

<p>Located in the <code>examples</code> directory of the installed 
the SDK, the example code assumes that you are running clients 
against a directory server that is compliant with LDAPv3 (such as 
the Netscape Directory Server) and that you have the sample database 
(<code>example.com</code>) loaded on the server. (If you want to run 
the examples, you will need to have a working LDAP server running 
and the sample data contained in <code>example.com</code> must be 
properly loaded.)</p>

<p>To compile and run these examples, refer to the 
<code>README</code> file contained in the <code>examples</code> 
directory. The Windows NT versions of the LDAP C SDK include 
sample project files. Sample Visual C++ makefiles for a 32-bit 
Windows application (winldap) are included in the 
<code>windows</code> example directory. The Win32 version of the 
makefile is named <code>winldap.mak</code>.</p>

<h3 id="sync_example">Synchronous Examples</h3>

<p>These samples use the synchronous LDAP calls. These function 
calls are more straightforward to use than their asynchronous 
counterparts. Because of this, it is suggested you look at these 
examples first.</p>

<p>The synchronous calls block the calling process until all results 
have been returned, so they are probably not appropriate for use 
with clients that implement a graphical user interface (GUI) in a 
single-threaded environment because these programs usually rely on 
event loops. However, these sample programs fine for command-line 
clients and CGI programs.</p>

<p><strong>Table 1-5 - Synchronous example programs</strong></p>

<table class="data">
 <tr>
  <th>Example Program</th>
  <th>Description</th>
 </tr>
 <tr>
  <td><code>search.c</code></td>
  <td>
   Shows how to use <code>ldap_search_s()</code> to search for all 
   entries which have an attribute value which exactly matches what 
   you're searching for. In this example, all entries with the 
   surname (last name) "<code>Jensen</code>" are retrieved and 
   displayed.
  </td>
 </tr>
 <tr>
  <td><code>csearch.c</code></td>
  <td>Like <code>search.c</code>, but enables an in-memory cache.</td>
 </tr>
 <tr>
  <td><code>ssnoauth.c</code></td>
  <td>
   Like <code>search.c</code>, but the search is done over an SSL 
   protected TCP connection.
  </td>
 </tr>
 <tr>
  <td><code>ssearch.c</code></td>
  <td>
   Like <code>ssnoauth.c</code>, but with certificate based 
   authentication thrown in.
  </td>
 </tr>
 <tr>
  <td><code>srvrsort.c</code></td>
  <td>
   Shows how to use server side sorting in conjunction with the 
   <code>ldap_search_ext_s()</code> function.
  </td>
 </tr>
 <tr>
  <td><code>rdentry.c</code></td>
  <td>
   Shows how to use <code>ldap_search_s()</code> to retrieve a 
   particular entry from the directory. In this example, the entry 
   "<code>uid=bjensen, ou=People, dc=example,dc=com</code>" is 
   retrieved and displayed.
  </td>
 </tr>
 <tr>
  <td><code>getattrs.c</code></td>
  <td>
   Just like <code>read.c</code>, but retrieves specific attributes 
   from an entry.
  </td>
 </tr>
 <tr>
  <td><code>compare.c</code></td>
  <td>
   Shows how to use <code>ldap_compare_s()</code>, which allows you 
   to test if a particular value is contained in an attribute of an 
   entry.
  </td>
 </tr>
 <tr>
  <td><code>modattrs.c</code></td>
  <td>
   Shows how to use <code>ldap_modify_s()</code> to replace and add 
   to values in an attribute.
  </td>
 </tr>
 <tr>
  <td><code>modrdn.c</code></td>
  <td>
   Shows how to use <code>ldap_modrdn2_s()</code> to change the 
   relative distinguished name (rdn) of an entry.
  </td>
 </tr>
 <tr>
  <td><code>getfilt.c</code></td>
  <td>
   Shows how to use the <code>ldap_getfilter*()</code> family of 
   routines, which help generate LDAP filters based on an arbitrary 
   search string provided by a user.
  </td>
 </tr>
 <tr>
  <td><code>crtfilt.c</code></td>
  <td>
   Shows how to use the <code>ldap_create_filter()</code> function to 
   generate LDAP filters.
  </td>
 </tr>
</table>

<h3 id="async_example">Asynchronous Examples</h3>

<p>These examples use the asynchronous LDAP calls. The general idea 
is that you begin an operation, and then periodically poll to see if 
any results have been returned.</p>

<p><strong>Table 1-6 - Asynchronous example programs</strong></p>

<table class="data">
 <tr>
  <th>Example</th>
  <th>Description</th>
 </tr>
 <tr>
  <td><code>asearch.c</code></td>
  <td>
   Initiates a search for entries and polls for results, printing 
   them as they arrive.
  </td>
 </tr>
 <tr>
  <td><code>nsprio.c</code></td>
  <td>
   Like <code>asearch.c</code> but uses the PerLDAP routines to 
   incorporate Netscape Portable Runtime (NSPR).
  </td>
 </tr>
 <tr>
  <td><code>add.c</code></td>
  <td>Adds an entry to the directory.</td>
 </tr>
 <tr>
  <td><code>del.c</code></td>
  <td>Deletes an entry from the directory.</td>
 </tr>
 <tr>
  <td><code>psearch.c</code></td>
  <td>
   Shows how to use the Persistent Search (an LDAPv3 protocol 
   extension) to monitor a directory server for changes.
  </td>
 </tr>
 <tr>
  <td><code>ppolicy.c</code></td>
  <td>
   Attempts to bind to the directory and reports back any password 
   expiration information received. This demonstrates how clients 
   can process password policy information that is optionally 
   returned by Netscape Directory Server.
  </td>
 </tr>
</table>




<hr class="hide">
</div>
</div>
<div id="footer">
<ul>
<li><a href="../../sitemap.html">Site Map</a></li>
<li><a href="../../security/">Security Updates</a></li>
<li><a href="../../contact/">Contact Us</a></li>
<li><a href="../../foundation/donate.html">Donate</a></li>
</ul>
<p class="copyright">
Portions of this content are &copy; 1998&#8211;2009 by individual mozilla.org
contributors; content available under a Creative Commons license | <a
href="http://www.mozilla.org/foundation/licensing/website-content.html">Details</a>.</p>
<p>
<span>Last modified March 14,  2005</span>
<span><a href="http://bonsai-www.mozilla.org/cvslog.cgi?file=mozilla-org/html/directory/csdk-docs/getstart.htm&amp;rev=&amp;root=/www/">Document History</a></span>
</p>
</div>
</div>
</body>
</html>
