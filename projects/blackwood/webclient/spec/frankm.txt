On 6 October 18:22:37, Frank Mitchell wrote:
> ------- ------- --------------------------------------------------------
> No.     Sev.    Location
> ------- ------- --------
> Comment
> ------------------------------------------------------------------------
> 
> 1       T       General
> 
> Are you in contact with the WebShell team in Mozilla.org?  Does this
> fall in line with their proposed changes to WebShell?

ACCEPT: Yes, Ann has been in contact with the mozilla webshell people,
but we need to codify this contact information.

> 
> 2       T/E     Introduction
> 
> Is StarDivision's desire to use Gecko in StarOffice actually relevant
> to this spec?  You're detailing a Java API; it's unlikely StarOffice
> folks will want to fire up a JVM just to embed Gecko.  There's no
> reason not to reuse your work, but it might fit StarOffice purposes
> better if the spec either:
> 
> 	a) defined the API in UNO IDL, and/or
> 
> 	b) defined a C or C++ based API, used to implement a StarOffice 
> 	   component.

DEFER: remains to be seen

> 3       E       defn of BrowserControlFactory
> 
> Is this a static method?  It's not noted on the API, but later text
> mentions a static method.  OTOH, if BrowserControlFactory is an
> interface, it can't have static methods, so how would one get a
> BrowserControlFactory?

ACCEPT: BrowserControlCanvasFactory is in fact a class

> 4       T       defn of BrowserControlFactory
> 
> Should we be using the Component Manager for this, instead of defining 
> a new interface?

REJECT: We don't want to use an mozilla specific stuff in the API

> 5       T       defn of History
> 
> Do the methods that return HistoryEntry[] return a "copy" of internal
> data?  Or must clients not modify the array?

DISCUSS: I think it will end up being a copy

> 6       T/E     defn of History
> 
> Might a better name for goTo() be setHistoryIndex()?  [And I presume
> the boolean return value returns whether the index is in range a/o the 
> operation succeeded.]

DISCUSS: how about vist historyItem()?

> 7       T       defn of WindowControl
> 
> findInPage() seems restrictive; what if a Webclient user wanted to do
> regular expression searches, for example?  What about a solution where 
> the caller provides a "text iterator" that would allow access to the
> text content "directly"?  (A stream or reader wouldn't allow for
> backtracking.)  Or would there be no way to implement this with the
> current codebase?

REJECT: Your text iterator thingy could be facilitated with the DOM.

> 8       T       defn of FileMenu
> 
> Instead of using strings for filenames, why not use java.io.File or
> java.net.URL?

REJECT: In the interest of being thin, we'll use strings, which will get
converted to nsIURI's down in the bowels.  Also, we don't want them
using URLConnection and such to access the content.

> 
> 9       E       defn of Preferences
> 
> Could you list these methods (and others) alphabetically?  (Or better
> yet, alphabetically except for get/set methods, which are sorted by
> the logical attribute they get/set?  E.g.  [getBar, setBar, foo].)

ACCEPT:

> 10      T       defn of Preferences
> 
> Some of the set methods don't have corresponding get methods, as far
> as I can see.  Examples include getHomePage and getHistoryExpiration.
> Why are these "write-only" attributes?

REJECT: there are setters for these things.

> 11      T       defn of Preferences
> 
> Are there methods to get the {Global,Http,Secure,Ftp,Gopher}Proxy and
> SocksServer ports?  You can get the strings, and set the ports ...

REJECT: yes there are methods.

> 12      T       defn of NetDataCacheManager
> 
> Could the name of contains() be a little more descriptive?  Contains
> what?

ACCEPT: I'll change it to containsDataforUri().

> 13      T       defn of NetDataCacheManager
> 
> Also, what is the secondaryKeyLength argument in contains() for?
> Shouldn't that be implicit from secondaryKey.length()?

ACCEPT: yes, this is a native code holdover.

> 14      E       defn of NetDataCacheManager
> 
> "RemoveAll" should start with a lowercase letter, right?

ACCEPT

> 15      E       defn of NetDataCache
> 
> "RemoveAll" should start with a lowercase letter, right?

ACCEPT

> 16      T       Events and Actions
> 
> Why do EventListeners all have one method that take a numeric error
> code?  What about the time-honored tradition of Java event listeners
> having one method for each event?  True, if the native code uses codes 
> the implementor must translate them to method calls, but that's just a 
> case statement.

REJECT: we're following the java event tradition.  See
java.awt.event.ActionListener

> 17     T        Events and Actions
> 
> If each mask has its own bytes, I can see why the masks must be Java
> longs (64-bit).  Still, I've found from BlackConnect that jlongs are
> far less portable than 32-bit ints; most of my thread dumps come from
> a mismatch between how jni.h defines jlong and how the actual JVM and
> JNI binaries think of them.  (Hence my warning about removing
> Mozilla's jni.h before compiling BlackConnect).
> 
> So I'd encourage you to remove jlongs from places where they're not
> absolutely necessary.

ACCEPT: These will be changed to ints.

> 18     E        Validation Criteria
> 
> Did you just leave in the template gorp, or is this supposed to make
> sense?

ACCEPT: I wanted to get someone else to write this section.

gorp

gorp n. [CMU: perhaps from the canonical hiker's food, Good Old Raisins
and Peanuts] Another metasyntactic variable, like foo and bar.

