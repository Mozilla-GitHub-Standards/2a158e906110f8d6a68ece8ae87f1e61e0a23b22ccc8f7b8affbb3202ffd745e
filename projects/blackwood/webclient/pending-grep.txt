This file contains the edited output of running 

grep PENDING

on the webclient files.

This report was generated on 08 March 2000.

// PENDING(edburns): Is this needed: // private BrowserControlIdleThread	idleThread;
.\classes_spec\org\mozilla\webclient\BrowserControlCanvas.java
        // PENDING(edburns): do some magic to determine the right kind of
.\classes_spec\org\mozilla\webclient\BrowserControlFactory.java
    // PENDING(edburns): when we have a java implementation, this is
.\classes_spec\org\mozilla\webclient\BrowserControlImpl.java
            // PENDING(edburns): test code, replace with production code
.\classes_spec\org\mozilla\webclient\test\EmbeddedMozilla.java
        // PENDING(edburns): maybe we need to put this in some sort of
 * Called from java to allow the native code to process any pending
.\classes_spec\org\mozilla\webclient\wrapper_native\NativeEventThread.java

    // PENDING() should this be done using an nsActionEvent subclass?
.\src_moz\CurrentPageImpl.cpp
// PENDING(edburns): take this out
    mRefCnt = 1; // PENDING(edburns): not sure about how right this is to do.
.\src_moz\DocumentLoaderObserverImpl.cpp
 * PENDING(): this should probably live in EventRegistration.h
 *<P> PENDING(): we could do away with the switch statement using
 * PENDING(): implement nativeRemoveListener, which must call
    // PENDING(edburns): make sure do DeleteGlobalRef on the removeListener
    while(gtk_events_pending()) {
    // PENDING(mark): Does this work on the Mac?
    eventQueue->ProcessPendingEvents();
    printf("EventHandler: Done processing pending events\n");
.\src_moz\NativeEventThread.cpp
    // PENDING(edburns): I'm not sure if we need to keep the
.\src_moz\RDFEnumeration.cpp
    // PENDING(edburns): assert rdf_InitRDFUtils()
    // PENDING(edburns): assert rdf_InitRDFUtils()
    // PENDING(edburns): assert rdf_InitRDFUtils()
// PENDING(mark): I suppose this is where I need to go into my explaination of why
.\src_moz\motif\BrowserControlNativeShimStub.cpp
// PENDING(mark): I suppose this is where I need to go into my explaination of why
.\src_moz\motif\MotifBrowserControlCanvasStub.cpp
// PENDING(mark): I suppose this is where I need to go into my explaination of why
.\src_moz\motif\NativeLoaderStub.cpp

The first interface
asked for must be "webclient.BrowserControlCanvas".  PENDING(): is this
requirement a problem?  The user must then add() the canvas to its
window hierarchy.

PENDING(): is it a problem that the user
must add() the BrowserControlCanvas in order for createWindow() to be
called, to do per-window initialization?

The WebShellInitContext instance is created as a result of calling
WindowControl.createWindow().  PENDING(): it should be destroyed as a
result of calling BrowserControl.terminate().

This abstract base class RDFTreeNode provides a java wrapper to the
mozilla RDF implementation.  PENDING(): this only works with RDF graphs
that don't have cycles.

This concrete subclass of RDFTreeNode provides a Properties instance
into which the bookmarks meta-data is stored.  PENDING(): not yet
implemented.

spec-compliant-design.html
