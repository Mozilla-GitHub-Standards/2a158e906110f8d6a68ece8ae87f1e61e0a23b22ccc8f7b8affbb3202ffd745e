[%# Features %]
[%
        PROCESS "inc/header.html.tmpl"
        title = "New Features in 2.20"
%]

<h1>Features</h1>
<ul>
        <li><a href="#pg">Experimental PostgreSQL Support</a></li>
        <li><a href="#ui">New User-Interface Color/Style</a></li>
        <li><a href="#hl">Higher-Level Categorization of Bugs (above "Product")</a></li>
        <li><a href="#wh">Regular Reports by Email of Complex Queries ("Whining")</a></li>
        <li><a href="#env">"Environment Variable" Authentication Method</a></li>
        <li><a href="#ddm">User-List Drop-Down Menus</a></li>
        <li><a href="#cw">Server-Side Comment Wrapping</a></li>
        <li><a href="#edit">UI for editing Priority, OS, Platform and Severity</a></li>
        <li><a href="#rss">Bugzilla Queries as RSS</a></li>
        <li><a href="#email">Choice of E-Mail Sending Methods</a></li>
        <li><a href="#up">"User Preferences"</a></li>
        <li><a href="#la">"Large Attachment" Storage</a></li>
        <li><a href="#vis">&quot;User Visibility&quot; Controls</a></li>
        <li><a href="#misc">Miscellaneous Improvements</a></li>
</ul>

<a name="pg"></a>
<h2>Experimental PostgreSQL Support</h2>
<p>In addition to MySQL, Bugzilla now also supports PostgreSQL. PostgreSQL
support is still somewhat experimental. Although most major features of
Bugzilla work on PostgreSQL in 2.20, there are probably still a few bugs
that need to be worked out.</p>

<p>PostgreSQL support in 2.20 is acceptable for smaller production
environments that don't mind running into a bug or two now and then.</p>

<a name="ui"></a>
<h2>New User-Interface Color/Style</h2>
<p>You'll notice that Bugzilla looks a bit nicer, now! We've made a few
color and style changes to update the overall "feel" of Bugzilla's
User Inteface. We plan to do even more work on the UI for 2.22.</p>

<a name="hl"></a>
<h2>Higher-Level Categorization of Bugs (above "Product")</h2>
<p>Previous Bugzillas had "Products" that you could file bugs in,
and "Components" for those products. Now, "Products" can be grouped
into "Classifications."</p>

<p>To enable this, a Bugzilla administrator can turn on the 
"useclassification" parameter, using editparams.cgi.</p>

<a name="wh"></a>
<h2>Regular Reports by Email of Complex Queries ("Whining")</h2>
<p>You can now tell Bugzilla to do a specific query (or set of queries)
every X minutes/hours/days, and send you the results by email. This is
great for keeping track on a daily basis of what's going on in 
your Bugzilla.</p>

<a name="env"></a>
<h2>"Environment Variable" Authentication Method</h2>
<p>You can now tell Bugzilla to accept a certain value passed in from
Apache as authentication for Bugzilla users. This means that Bugzilla
now "supports" any type of authentication that Apache supports.</p>

<p>To use this, set the "user_info_class" parameter to "ENV" and, at a 
minimum, set the "auth_env_email" parameter to the name of the 
Environment variable that passes the authenticated user (usually 
"REMOTE_USER").  If your webserver knows users' real names as well, also
set the "auth_env_realname" parameter.  If you are using a true 
single-signon system that assigns an identifier uniquely to an
individual, even across changes of email address, then set 
"auth_env_id" to the name of that variable.</p>

<a name="ddm"></a>
<h2>User-List Drop-Down Menus</h2>
<p>Now, anywhere in Bugzilla where you previously had to type in an
email address by hand, you have the choice of having Bugzilla instead
display a drop-down menu of users to pick from.</p>

<p>This feature is best for small installations with few users, because
on large installations the list grows too large to be useful.</p>

<p>To enable the feature, turn on the "usemenuforusers" parameter in
editparams.cgi.</p>

<a name="cw"></a>
<h2>Server-Side Comment Wrapping</h2>
<p>In older Bugzillas, comments were wrapped to 80 characters by the
user's web browser, and then stored in the database that way. This caused
problems because some browsers did not wrap comments properly.</p>

<p>Now, Bugzilla stores comments unwrapped and wraps them at display time, so
all new comments should be properly wrapped. Also, when you upgrade, Bugzilla
will look for old "mis-wrapped" comments and attempt to wrap them properly.</p>

<p>Lines beginning with the "&gt;" character are assumed to be quotes, and are
*not* wrapped.</p>

<a name="edit"></a>
<h2>UI for editing Priority, OS, Platform and Severity</h2>
<p>Bugzilla now has a User Interface for adding and removing values
from the OS, Platform, Priority, and Severity fields. You can also
rename values. Any user in the "editcomponents" group can click
on the "Field Values" link in their page footer to edit these fields.</p>

<p>Also, the default list of choices for OS and Platform for new 
installations is now much smaller. Old installations will keep 
the same list they have now.</p>

<a name="rss"></a>
<h2>Bugzilla Queries as RSS</h2>
<p>You can now view a Bugzilla query as valid RSS 1.0. This means that you
could add a particular query to your RSS aggregator, if you wanted, to
keep track of changes in Bugzilla.</p>

<p>To see a query as RSS, just click on the "RSS" link on the bottom of
your query results. Your query must return at least 1 result in order
for you to see the link.</p>

<a name="email"></a>
<h2>Choice of E-Mail Sending Methods</h2>
<p>Bugzilla now uses perl's <tt>Mail::Mailer</tt> to send e-mail. This means that
you have several choices of how Bugzilla can send email. By default, it
still uses sendmail, but it can also use SMTP, qmail, or send all email
to a file instead of out to users.</p>

<p>A Bugzilla administrator can change which method is used by setting the
"mail_delivery_method" parameter in editparams.cgi.</p>

<a name="up"></a>
<h2>User Preferences</h2>
<p>Bugzilla users will now notice a section in their Preferences called
"General Preferences." Administrators will notice a new link called
"User Preferences."</p>

<p>The Preferences system allows Bugzilla developers to specify arbitrary
"user preferences" that change the behavior of certain parts of Bugzilla.
Administrators can control whether or not users are allowed to use these
preferences, and what the default settings are for a user who is not
logged in.</p>

<p>The first two preferences that we have implemented are:</p>
<ul>
  <li>"Show a quip at the top of each bug list"</li>
  <li>"When viewing a bug, show comments in this order..."</li>
</ul>

<p>We plan to implement more preferences in the future.</p>

<a name="la"></a>
<h2>"Large Attachment" Storage</h2>
<p>Bugzilla can now store very large attachments on disk instead of in the
database. These attachments can't be searched with Boolean Charts, but
they also don't take up database space, and they can be deleted individually
by the admin.</p>

<p>When uploading an attachment, a user chooses if it's a "Big File." If so,
it's stored on the disk instead of in the database.</p>

<p>To enable this feature, set the "maxlocalattachmentsize" parameter to
a non-zero value, in editparams.cgi.</p>

<h2><a name="vis"></a>&quot;User Visibility&quot; Controls</h2>
<p>It is now possible to prevent users from encountering all other users when
using user-matching or drop-down userlists.  To enable this restriction, 
enable the "usevisibilitygroups" parameter.  Once this is enabled, each 
group's permissions will include a new column for "visible."  The members 
of any group for which the group being edited is visible will be
able to user-match this groups's users or see them in dropdown lists.
This does not control who a user can CC on a bug, only who they can 
see in the user-matching lists or drop-downs.</p>

<a name="misc"></a>
<h2>Miscellaneous Improvements</h2>
<ul>
<li>Marking an attachment as obsolete will now cancel all pending flag
  requests for that attachment. That is, any flag that was set to "?"
  on that attachment will be cleared.</li>

<li>You can now see which users are "watching" you, on the email 
  preferences page.</li>

<li>You can tell Bugzilla to mark certain comments in a different
  color by adding "&amp;mark=1,2,3,5-7" to the end of the show_bug.cgi URL,
  where "1,2,3,5-7" means "highlight comment 1, comment 2, comment 3, and
  comments 5 through 7."</li>

<li>"QA Contact" now also appears on the New Bug page, if QA Contacts are
  enabled on your installation.</li>

<li>Bugzilla email now has the "In-Reply-To" header added to it, so if
  you use an email client that supports threads, you can view your
  Bugzilla email in threads. If you are upgrading to a new version of
  Bugzilla, and you want this support, please see the instructions at:
  <a href="https://bugzilla.mozilla.org/attachment.cgi?id=172267">https://bugzilla.mozilla.org/attachment.cgi?id=172267</a></li>

<li>The email preferences system has been slightly updated. You will notice
  the changes on your Email Preferences page.</li>

<li>You can now negate individual "boolean charts" (in the 
  "Advanced Searching" section at the bottom of the "Advanced 
   Search" page). That is, you can add "NOT" to the front of them.</li>

<li>You can add the words %assignee%, %reporter%, %user% (yourself), or
  %qacontact% on the right-hand side of a Boolean Chart. For example, you
  could make a Boolean Chart which said "Reporter" "does not equal" 
  "%assignee%". That would give you all bugs where the Reporter was not
  the same as the Assignee.</li>

<li>You can now search Boolean Charts by "commenter."</li>

<li>If you have a group with no name, it will be re-named to "group_#" where
  "#" is the numeric Bugzilla Group ID for that group.</li>

<li>If you are using time-tracking, you can now see a report of time spent
  on bugs using summarize_time.cgi.</li>

<li>If you are using time-tracking, bugzilla will now set "hours remaining"
  to "0" automatically if you RESOLVE a bug, whether you are in the
  time-tracking group or not.</li>
</ul>
