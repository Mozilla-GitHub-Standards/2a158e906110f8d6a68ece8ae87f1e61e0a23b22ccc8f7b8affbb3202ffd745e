<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<link rel="top" title="Home" href="http://www.mozilla.org/">
<link rel="stylesheet" type="text/css" href="../../css/print.css"  media="print">
<link rel="stylesheet" type="text/css" href="../../css/base/content.css"  media="all">
<link rel="stylesheet" type="text/css" href="../../css/cavendish/content.css" title="Cavendish" media="screen">
<link rel="stylesheet" type="text/css" href="../../css/base/template.css"  media="screen">
<link rel="stylesheet" type="text/css" href="../../css/cavendish/template.css" title="Cavendish" media="screen">
<link rel="icon" href="../../images/mozilla-16.png" type="image/png">

  <title>Coding Style - Mozilla Help Viewer Project</title>
<script src="../../__utm.js" type="text/javascript"></script>
</head>
<body id="www-mozilla-org" class="deepLevel nomenu">
<div id="container">
<p class="important">You are currently viewing a snapshot of www.mozilla.org taken on April 21, 2008. Most of this content is
highly out of date (some pages haven't been updated since the project began in 1998) and exists for historical purposes only.  If
there are any pages on this archive site that you think should be added back to www.mozilla.org, please <a
href="https://bugzilla.mozilla.org/enter_bug.cgi?product=Websites&component=www.mozilla.org">file a bug</a>.</p>
<p class="skipLink"><a href="#mBody" accesskey="2">Skip to main content</a></p>
<div id="header">
<h1><a href="/" title="Return to home page" accesskey="1">Mozilla</a></h1>
<ul>
<li id="menu_aboutus"><a href="../../about/" title="Getting the most out of your online experience">About</a></li>
<li id="menu_developers"><a href="../../developer/" title="Using Mozilla's products for your own applications">Developers</a></li>
<li id="menu_store"><a href="http://store.mozilla.org/?r=mozorg1" title="Shop for Mozilla products on CD and other merchandise">Store</a></li>
<li id="menu_support"><a href="../../support/" title="Installation, trouble-shooting, and the knowledge base">Support</a></li>
<li id="menu_products"><a href="../../products/" title="All software Mozilla currently offers">Products</a></li>
</ul>
<form id="searchbox_002443141534113389537:ysdmevkkknw" action="http://www.google.com/cse" title="mozilla.org Search">
<div>
<label for="q" title="Search mozilla.org's sites">search mozilla:</label>
<input type="hidden" name="cx" value="002443141534113389537:ysdmevkkknw">
<input type="hidden" name="cof" value="FORID:0">
<input type="text" id="q" name="q" accesskey="s" size="30">
<input type="submit" id="submit" value="Go">
</div>
</form>
</div>
<hr class="hide">
<div id="mBody">





<div id="side" class="left">
  <ul id="nav">
    <li><a href="./"><strong>Help Viewer Project</strong></a>
      <ul>
        <li><a href="documentation">Docs</a></li>
        <li><a href="bugs">Bugs</a></li>
        <li><a href="help">How to Help</a></li>
        <li><a href="contributors">Contributors</a></li>
      </ul>
    </li>
  </ul>
</div>


<div id="mainContent" class="bodyleft">
<h1>Coding Style</h1>

<p>All Mozilla code has a set of <a
  href="../../hacking/mozilla-style-guide.html">coding style
  guidelines</a>.  Issues not covered in that document are left to the module
  owner's choice.  This document standardizes those choices in Help source code,
  ensuring that it retains a uniform coding style and layout, thereby aiding
  clarity and ease of editing.</p>

<p><strong>Draft 1.0<br>
  <a href="mailto:jwalden&#x40;mit.edu">Jeff Walden</a>
  </strong></p>

<h2>Quick Summary</h2>
<ul>
  <li><a href="#moz_guidelines">Mozilla Guidelines</a>
    <ul>
    <li>Limit lines to 80 characters, don't use tabs</li>
    </ul>
  </li>
  <li><a href="#docs_format">General format</a>
    <ul>
    <li>XHTML with XML prolog, DOCTYPE</li>
    </ul>
  <li><a href="#whitespace">Whitespace/Indentation</a>
    <ul>
    <li>Blank line between block elements</li>
    <li>Indent two spaces for html&gt;body&gt;*, indent corresponding to depth
      in document tree</li>
    </ul>
  </li>
  <li><a href="#images">Images</a>
    <ul>
    <li>Always specify alt text, height, width via attributes</li>
    <li>Caption optional (recommended for complex images), must not be in image
      itself</li>
    </ul>
  </li>
  <li><a href="#ids">The <code>id</code> Attribute</a>
    <ul>
    <li>Don't overuse</li>
    <li>Value is text representation of context minus non-important words,
      underscores switched for spaces</li>
    </ul>
  </li>
  <li><a href="#in_this_section">In this section:</a>
    <ul>
    <li>Represent the tree of headers in the document; node text may be
      shortened</li>
    </ul>
  </li>
  <li><a href="#headers_titles">Headers and Titles</a>
    <ul>
    <li>Capitalize main words, keep text short</li>
    <li>Topic title in <code>&lt;h1&gt;</code>, nest the rest</li>
    <li><code>id</code>s for "In this section" linking</li>
    </ul>
  </li>
  <li><a href="#tables">Tables</a>
    <ul>
    <li>Use <code>&lt;th&gt;</code>, <code>&lt;td&gt;</code>, and
      <code>&lt;thead&gt;</code> properly</li>
    <li>Consider <code>summary</code> and <code>caption</code> for complex
      tables</li>
    </ul>
  </li>
  <li><a href="#common_strings">Common Strings as Entities</a></li>
  <li><a href="#lists">Lists</a></li>
  <li><a href="#use_correct_element">Use the Correct Element</a></li>
  <li><a href="#special_chars">Special Characters</a></li>
</ul>

<h2><a name="moz_guidelines">Mozilla Guidelines</a></h2>
<p>As there is no pressing reason not to follow the mozilla.org guidelines,
  these guidelines are non-negotiable for Help code.  This document lists the
  most up-to-date guidelines as of this page's last modification; for current
  guidelines please visit the
  <a href="../../hacking/mozilla-style-guide.html">Mozilla
  style guidelines</a>.  Actually, only a few guidelines apply to Help source
  code: specifically, these issues are tabs and line length.  Tabs have no
  defined length, so they don't mesh well with Bonsai and printing.  Avoid them
  at all costs &mdash; use two spaces instead.  Long line lengths can also
  disrupt Bonsai and printing, so keep line lengths to 80 characters or less
  except in a very few small cases (<code>DOCTYPE</code>s, stylesheet
  <code>&lt;link&gt;</code>s in <code>&lt;head&gt;</code>, or structure requires
  it, for example &mdash; check if you aren't sure sure).</p>

<h2><a name="docs_format">Format</a></h2>
<p>All Help documents are written in valid <abbr title="Extensible Hypertext
  Markup Language">XHTML</abbr>.  Using XHTML keeps information separate from
  layout, enforces basic coding requirements such as well-formedness and
  clarity, and yet is still as simple to write as HTML.  There are a few
  considerations to make when writing XHTML Help documents.  First, all
  documents will use the optional XML prolog to more easily distinguish XHTML
  documents from their HTML predecessors.  Second, Help documents will not
  include any HTML "hacks" (such as using <code>&lt;br /&gt;</code> instead of
  <code>&lt;br/&gt;</code>).  Third, Help documents will import a supplementary
  DTD for using special entities.  This also means that due to validator
  limitations, Help documents will not automatically <a
  href="http://validator.w3.org/">validate</a>.  The solution to this is to set
  the document type explicitly to XHTML 1.1 in the validator interface.  This
  will still erroneously generate errors, but as long as the first two errors
  are for the unusual DOCTYPE and all others are for incorrect entity
  substitution (such as <code>&amp;brandFullName;</code> for the full product
  name), the document should in fact be valid.  Also, the page will not display
  when loaded in the Help viewer, adding another layer of protection.</p>

<p>All documents must be written in the UTF-8 encoding.  Each must start with an
  XML prologue and an XHTML 1.1 DOCTYPE declaration (along with any external DTD
  imports, such as for <code>&amp;brandShortName;</code> and
  <code>&amp;brandFullName;</code>):</p>

<div class="example">
<pre class="code">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"[
  &lt;!ENTITY % brandDTD SYSTEM "chrome://global/locale/brand.dtd"&gt;
  %brandDTD;
]&gt;</pre>
</div>

<h2><a name="whitespace">Whitespace/Indentation</a></h2>
<p>Whitespace aids in code clarity, but it must be used carefully.  Help
  documents have several whitespace rules to preserve clarity and emulate the
  way a page will look for the end user.</p>

<p>Use an empty line between all
  <a href="http://www.w3.org/TR/html401/sgml/dtd.html#block">block elements</a>.
  This source code formatting is similar to the actual formatting of the
  rendered document, and it will help visualize the way the document will
  actually look to end users.  Inline-block items like <code>&lt;img&gt;</code>
  must also be separated this way.  Do not use blank lines between
  <code>&lt;html&gt;</code>, <code>&lt;head&gt;</code>,
  <code>&lt;body&gt;</code>, and their neighboring tags; a simple newline will
  suffice.  Inside inline (text-level) elements, simply lay out the contents
  continuously, as if the contents were simply text.  Wrap contents at a maximum
  of 80 characters and continue on the next line, <a href="#indent">indented two
  spaces</a>.  Compact all whitespace into single spaces (excluding line
  endings).</p>

<p><a name="indent">In general most of Help code is indented in some way.</a>
  Several tags, however, must never be indented: <code>&lt;html&gt;</code>,
  <code>&lt;body&gt;</code>, and <code>&lt;head&gt;</code>.  Excepting children
  of <code>&lt;body&gt;</code> and <code>&lt;head&gt;</code>, all other
  block-level tags (whether descendant or not) must be indented in proportion to
  how deeply they are nested.  The amount of indentation is exactly two spaces;
  do not use the tab character for any indentation.  Additionally, continuous
  inline content must be indented on all lines after the first:</p>

<div class="example">
<pre class="code">&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. In quis ligula. Maecenas
  nulla odio, euismod at, varius non, congue bibendum, enim. Maecenas laoreet sagittis
  est. Suspendisse volutpat. Vestibulum cursus. Phasellus vitae dui molestie metus
  congue consequat. Donec neque. Cras non urna nec enim aliquam tincidunt. Nullam
  aliquam odio eu nisl. Ut magna. Sed neque.&lt;/p&gt;</pre>
</div>

<h2><a name="images">Images</a></h2>
<p>All images must specify <code>alt</code> text for accessibility purposes and
  height and width via attributes.  Per accessibility guidelines, keep in mind
  that <code>alt</code> text should serve as <em>a replacement</em> for an image
  and <em>not</em> as a tooltip!  The optional <code>title</code> attribute is
  used for tooltips; for more complicated images it is strongly encouraged.</p>

<p>Giving an image a <em>text</em> caption is often a good idea if the image
  relates directly to a specific point in the text.  Be careful not to overuse
  captions, however, as they may detract from the images.  Never include a
  caption as part of the image itself, as this is inaccessible and wastes
  space.</p>

<h2><a name="ids">The <code>id</code> Attribute</a></h2>
<p>The <code>id</code> attribute is very useful.  It can be used superfluously,
  though, so its use is restricted in Help documents.  Specifically, the
  <code>id</code> attribute should only be used when a specific element needs to
  be styled using CSS or when the element serves as the target of a link from an
  RDF or XHTML document.</p>

<p>The syntax of <code>id</code>s is this: first, eliminate all words not needed
  to convey the meaning of the element from the text content of the element (or
  the textual representation of an image if necessary).  Second, replace all
  spaces between words with underscores.  Finally, lowercase the whole string.
  This is your <code>id</code>.  For example, the phrase "Setting Your Home Page
  in the Options Panel" would become "setting_home_page_in_options".  Note that
  sometimes meaningful words ("Panel") are eliminated if they aren't really
  necessary to understanding meaning.</p>

<h2><a name="in_this_section">In this section:</a></h2>
<p>Document outlines at the top of Help documents are useful for end users who
  want to skim for useful information.  For Help documents, the "In this
  section" box serves this purpose.  When coding these, there are a few rules:
  first, they exactly follow the layout of the headers in the document
  (excluding the title <code>&lt;h1&gt;</code>) in order.  As the links are also
  in nested lists, link nesting should correspond to header levels.  For an
  example of this, simply view the outline of any Help document generated by the
  <a href="http://validator.w3.org/">W3 validator</a>.  Link text need not
  correspond exactly with heading text; extraneous words may be removed if it is
  deemed necessary.</p>

<h2><a name="headers_titles">Headers and Titles</a></h2>
<p>Headers and titles have a few special issues beyond those of normal text.
  First, their main words must be capitalized.  This usually would include every
  word except for prepositions and conjunctions in the text, but it may apply to
  other words depending on situation.  Second, they must be properly nested: the
  page title must be <code>&lt;h1&gt;</code>, all second-level headings must be
  <code>&lt;h2&gt;</code>, et cetera.  As headers are always mentioned in "In
  this section" parts of documents, they must also always have <code>id</code>
  attributes (excluding the page title, which is never linked).</p>

<h2><a name="tables">Tables</a></h2>
<p>Tables must only be used for storing data; <acronym
  title="Cascading Style Sheets">CSS</acronym> should be used for all layout.</p>

<p>Within tables, however, a few
  <a href="../ui/accessibility/">accessibility considerations</a> exist.  First,
  all header cells should be <code>&lt;th&gt;</code> cells, not
  <code>&lt;td&gt;</code> cells.  Table header cells will be automatically
  styled using CSS, so it is not necessary to put their content within a
  <code>&lt;strong&gt;</code> element for any look (which would, in fact,
  violate these rules).  Table headers should also be properly marked up: table
  rows that contain headers should be enclosed in the <code>&lt;thead&gt;</code>
  tag. Correspondingly, the table body should be enclosed in a
  <code>&lt;tbody&gt;</code> tag.</p>

<p>Two final accessibility issues are worth mentioning: the <code>summary</code>
  attribute and the <code>&lt;caption&gt;</code> tag.  Neither is required, but
  each is worth considering for particularly complex tables.</p>

<h2><a name="common_strings">Common Strings as Entities</a></h2>
<p>Some strings in Help documentation are used either frequently or in special
  situations.  Due to localization and platform constraints, keyboard modifier
  keys must always be written as entities:</p>

<table class="data">
  <thead>
    <tr>
      <th>Instead of this:</th>
      <th>Use this:</th>
    </tr>
  </thead>
  <tr>
    <td><code>&lt;kbd&gt;Ctrl&lt;/kbd&gt;</code></td>
    <td><code>&amp;ctrlKey;</code></td>
  </tr>
  <tr>
    <td>The "accel" key (<code>&lt;kbd&gt;Ctrl&lt;/kbd&gt;</code> on Windows and
      Linux, <code>&lt;kbd&gt;Cmd&lt;/kbd&gt;</code> on Mac)</td>
    <td><code>&amp;accelKey;</code></td>
  </tr>
  <tr>
    <td>The "alt" key (<code>&lt;kbd&gt;Alt&lt;/kbd&gt;</code> on Windows/Linux,
      <code>&lt;kbd&gt;Opt&lt;/kbd&gt;</code> on Mac)</td>
    <td><code>&amp;altKey;</code></td>
  </tr>
  <tr>
    <td><code>&lt;kbd&gt;Shift&lt;/kbd&gt;</code></td>
    <td><code>&amp;shiftKey;</code></td>
  </tr>
  <tr>
    <td><code>&lt;kbd&gt;Enter&lt;/kbd&gt;</code>
    <td><code>&amp;enterKey;</code></td>
  </tr>
  <tr>
    <td>preference/option</td>
    <td><code>&amp;pref.singular;</code></td>
  </tr>
  <tr>
    <td>preferences/options</td>
    <td><code>&amp;pref.plural;</code></td>
  </tr>
  <tr>
    <td>Preference/Option</td>
    <td><code>&amp;pref.singularCaps;</code></td>
  </tr>
  <tr>
    <td>Preferences/Options</td>
    <td><code>&amp;pref.pluralCaps;</code></td>
  </tr>
  <tr>
    <td>The appropriate menu path to options</td>
    <td><code>&amp;pref.menuPath;</code></td>
  </tr>
  <tr>
    <td>http://www.mozilla.org/projects/firefox/help/1.1</td>
    <td><code>&amp;images.baseURL;</code></td>
  </tr>
</table>

<p>The reasons for doing this are both obvious and subtle:</p>

<ul>
  <li>It makes getting things right on all platforms far, far easier than
    otherwise.  Instead of having to special-case each modifier key every place
    it's used, we can just use one short entity in each place.  Previously, we
    just used <kbd>Ctrl</kbd> everywhere, and that was completely wrong on
    Macs.  This new way means we get platform-specific accuracy and nomenclature
    for low cost.  (Curious why <kbd>Ctrl</kbd> and <kbd>Shift</kbd> are in
    entities?  Consistency.)  There is one caveat, however: we have to be
    absolutely certain whether to use <code>&amp;ctrlKey;</code> or
    <code>&amp;accelKey;</code>, as they have different semantics.
    Unfortunately, the only way to do this is to read the code &mdash; there's
    no centralized list of shortcut keys.  The same rationale applies to the
    various preference/option entities, which let us use the correct
    nomenclature based on the platform.  This system is also localizable &mdash;
    previous systems to do this weren't localizable such that one language pack
    would work on all platforms, which created problems.</li>
  <li>The location for images is in an entity to make updating it for new
    versions of Firefox easy.  It has no other real value.</li>
</ul>

<h2><a name="lists">Lists</a></h2>
<p>In Help documentation lists are somewhat tricky issues.  In some instances,
  such as when a list requires a certain order, the exact type of list to use is
  self-evident: <code>&lt;ol&gt;</code>.  In other case, though, such as when a
  list of options is being defined, the lines become blurry: the list is a
  relatively unordered list (<code>&lt;ul&gt;</code>), but it's also a
  definition list (<code>&lt;dl&gt;</code>).  In these circumstances either
  option could probably be argued to be correct.  As standards are good to
  ensure this sort of nitpicking is minimized, in Help documents, if a list is a
  list of terms with definitions, such as a list of preferences, the only type
  of list used will be <code>&lt;dl&gt;</code>.  <code>&lt;ul&gt;</code> will
  only be used when the list in question is unordered and no options are being
  declared and defined &mdash; this will mostly likely be a rare occurrence.
  (This definition is extremely likely to change as time passes to better fit
  the actual situations that arise.)</p>

<h2><a name="use_correct_element">Use the Correct Element</a></h2>
<p>While writing code, sometimes special types of text should be marked up to
  indicate their purpose to the end user.  The current list of such text is as
  follows:</p>

<dl>
  <dt>Keyboard input</dt>
  <dd><p>Keyboard input includes text typed into dialog boxes, shortcut keys,
    and other keypresses.  Input should be surrounded by
    <code>&lt;kbd&gt;</code> elements.  For keyboard shortcuts, only the keys
    should be in the element; any symbols separating multiple keypresses ("+")
    should not be enclosed.</p></dd>

  <dt>Emphasized text</dt>
  <dd><p>Any text that would be emphasized if spoken should be marked up with
    the <code>&lt;em&gt;</code> tag to indicate that it should be emphasized.
    Text must not be enclosed in an <code>&lt;em&gt;</code> tag simply to
    italicize it.</p></dd>

  <dt>Strong text</dt>
  <dd><p>Any text that is strongly worded or of particular importance should be
    marked up with the <code>&lt;strong&gt;</code> tag to indicate that it is
    important and should be strongly meant.  Text must not be enclosed in a
    <code>&lt;strong&gt;</code> tag simply to bold it.</dd>

  <dt>Buttons and other interactive parts of the UI</dt>
  <dd><p>Buttons and interactive parts of the UI (excluding menus) should be
    enclosed in the <code>&lt;em&gt;</code> element for now; this may change in
    the future to something more flexible.</p></dd>

  <dt>Menu text and selections</dt>
  <dd><p>Any reference to a menu, menu item, or menu selection should be
    appropriately noted.  The proper way to do this is through use of the
    <code>&lt;span&gt;</code> tag with a <code>class</code> attribute of value
    <code>menuItem</code>.  The menu selection will be styled through CSS.  The
    reasons for this are twofold: first, consistent menu notation will ease the
    reading of end users, and two, it will make the jobs of localizers easier by
    separating out the more easily-parsed menu items from the more complex
    regular language.</p>

  <p>In Help code the standard form for citing menu items has been arbitrarily
    decided as Menu &gt; [Submenu &gt;] Menu Item (encased within a
    <code>&lt;span class="menuPath"&gt;</code> to keep consistency with the <a
    href="../../products/firefox/support/">Mozilla Firefox</a> site.</p></dd>

</dl>

<h2><a name="special_chars">Special Characters</a></h2>
<p>Occasionally, the need may come for a Help document to include an ampersand
  or an angle bracket, or some other character with special meaning in XHTML.
  These characters must be written as entities, as must most other special
  characters (e.g., &mdash;, ', &quot;).  In general, if a character is not
  on a standard English 101-key keyboard or it has special meaning in XHTML,
  then write it as an entity.</p>

<p><a href="mailto:jwalden#x40;mit.edu">Feedback is welcomed</a>.</p>

</div>



<hr class="hide">
<hr class="hide">
</div>
<div id="footer">
<ul>
<li><a href="../../sitemap.html">Site Map</a></li>
<li><a href="../../security/">Security Updates</a></li>
<li><a href="../../contact/">Contact Us</a></li>
<li><a href="../../foundation/donate.html">Donate</a></li>
</ul>
<p class="copyright">
Portions of this content are &copy; 1998&#8211;2009 by individual mozilla.org
contributors; content available under a Creative Commons license | <a
href="http://www.mozilla.org/foundation/licensing/website-content.html">Details</a>.</p>
<p>
<span>Last modified March 22,  2005</span>
<span><a href="http://bonsai-www.mozilla.org/cvslog.cgi?file=mozilla-org/html/projects/help-viewer/documentation_coding-style.shtml&amp;rev=&amp;root=/www/">Document History</a></span>
</p>
</div>
</div>
</body>
</html>
