Strategic outlook
- Web standards stagnating due to MS monopoly
- W3C standards alone won't save us from this trend
- "Desktop" and "Web" applications converging
- Proprietary XUL-like languages springing up
- Rich 2D graphics with animation effects wanted
- Linux desktop (warts and all) usage growing

Mozilla's strengths
- Cross-platform: runs on a plethora of systems
- Killer new products: Firefox and Thunderbird
- Mature application suite known to Netscape users
- The most complete and correct layout engine (Hixie)
- 2nd most popular layout engine after IE's Trident
- Supports the most web pages among non-IE browsers
- Lots of extensions, modules, projects, breadth

Mozilla's weaknesses
- Lack of complete, integrated 2D graphics solution
- No well-integrated programming-in-the-large languages,
  only one well-integrated scripting language (JS)
- XUL app learning curve steep for non-web-developers
- Weak native widget and dialog integration
  - Gnome/Linux platform UI evolving rapidly
  - Mac OS X deprecating Appearance Manager
- Poor or missing developer documentation

What is to be done?
- Maximize distribution
  - Linux is biggest growth area for Mozilla
  - Cross-platform is an asset, preserve it
- Forge alliances with other open source projects
  - Leverage existing solutions, avoid NIH
  - Help people build on Mozilla-the-platform
- Add collaborative and ease-of-use features
  - Innovate ahead of proprietary vendors
  - Innovate in ways that MS et al. won't/can't

Build on Mozilla's strengths
- Continuous footprint and performance improvement
  - Minimo for handhelds advances the frontier
    [show Minimo footprint graph]
- Support more standards: SVG, XForms; an MNG subset?
  - As extensions at first, by default if low overhead
- Partner with Apple/Opera to advance browser standards
  - Standardize XUL box layout via CSS WG (under way)
  - Standardize XBL in a new W3C group (starting)

Address Mozilla's weaknesses
- Accelerate and optimize the SVG effort
- Support popular scripting and programming languages
- Integrate a Mozilla XUL builder into the Eclipse IDE
- Extend support for native widgets and dialogs
- Launch developer.mozilla.org
- Innovate for collaboration and ease-of-use

Accelerate and optimize SVG
- Help SVG implementors
  - DeCOMtaminate, shrink, avoid mistakes of the past
  - Bring Mozilla's CSS and DOM expertise to bear
- Future-proof Mozilla's rendering architecture (roc, tor)
  - Take advantage of hardware acceleration
  - Target Cairo and OpenGL; Quartz on Mac OS X; GDI+
  - Need helpers for all platform ports as APIs shift
- Port SVG code to the new rendering APIs

More programming and scripting languages
- Implement JavaScript 2 (ECMA-262 Edition 4)
  - Narcissus project (self-hosted JS/JS2) started
- Extend existing Python support to match chrome JS
  - No <script type="application/x-python"> in web pages
- Integrate Perl5 a la Python?
- Support several language runtimes (Mono, Parrot)?
- Better Java integration?

An Eclipse XUL app-builder plugin
- Wizards to generate boilerplate and packaging
- Direct manipulation graphical layout design tool
- Integrated validation, inspection, debugging
- Use Java, SWT for plugin superstructure, front end
- Embed Gecko back end with full XUL support
- Redo Venkman UI?  What about DOM Inspector?
- Should be "two-way": can read hand-crafted sources

Better native widget/desktop integration
- Look: more and better nsITheme support
- Look&Feel: fully native widgets and dialogs
  - Selectable via CSS extensions
  - Native widgets must support CSS group opacity,
    or else allow us to blend and render them
  - Use native file picker, print dialogs, etc.
- Track latest desktop/OS libs (e.g. gnome-vfs-mime)

developer.mozilla.org
- Based shamelessly on msdn.microsoft.com
- Library of API documents
- Tutorials for "how do I do X on this platform?"
- Extract doc-comments and code examples from code
- Bite-sized documents with lots of links and TOCs
- Wiki front end to website CVS back end
- Needed: a few good editors and writers

End-user innovations
- Personal data server with Google-like search
  - Intertwingle local files, messages, caches
- Shared web page annotations
  - Sharing via orkut-style small world network
  - Need scalable annotation storage solution
- Persistent, personal page restyling
  - Shared optionally along with annotations
- Page/blog/site style extraction and reuse

Toward Mozilla 2.0
- A version for the entire platform and source code
  - Apps have their own version number lines
  - SeaMonkey tracks platform version till it retires
- Interface compatibility breaking point
- We don't plan to break compatibility lightly
- developer.mozilla.org will help communicate
  - Deprecated API status with rationale
  - What new APIs to use instead
  well before a 2.0 release is finalized
- No schedule yet; after Firefox 1.0

New project summary
- SVG on new rendering architecture
- JS2, Python, other languages/runtimes
- XUL app builder IDE based on Eclipse
- More native widget/desktop integration
- developer.mozilla.org
- Ease-of-use and collaboration push

Q and A
