27 July 2001 Ed Burns <edburns@acm.org>

What is the contract discovery process?

  The process is an effort to retroactively employ some of the
  attributes of Design by Contract [1] on the area of study of "Java in
  Mozilla".  We will go through all the Java related code and discover
  the existing software contracts.  We will also make the contracts
  explicit by adding comments, assertions and runtime checks for pre and
  post-conditions.

What is success for this process?

  1. Every contract in the area of study that happens to be executed in
     the course of running the testcases is documented in the comments
     and expressed programmatically through assertions and other runtime
     tests.

  2. We know which of the contracts are being honored and which are not
     being honored.

What are the preconditions for success?

  All of the following must be at least partially met on order for the
  process to be successful.

  1. Must have commitment from team members

     Must give a certain amount of time per week.

  2. Must have good access to tools and skill at using them

     Every team must have at least one complete debuggable browser/jpi
     software stack with complete source code.  No exceptions.

  3. Must choose common stable software stack: define Mozilla and JPI
     version and platforms to be used for the process

  4. Must have a complete set of testcases

  5. The personnel must not change during the contract discovery
     process.  No one joins the process, no one leaves the process until
     it's done.

  6. Must have clearly defined boundaries of area of study.  

  7. Process leader must have an outside mentor available for
     consultation throughout the execution of the process.

  8. We must have a clear understanding of the magnitude of the contract
     discovery process.  That is, it should not be the case that we get
     into the process and realize there is *much* more work than we
     thought.

  9. We must know the unit of work so we can measure progress.

 10. Every team member must have the same understanding of what a
     contract is.

How do we know we're successful?

  Use a code coverage tool to demonstrate that every interaction has a
  clearly stated contract around it.

  Having the contracts makes it easy to write a document describing how
  to be an OJI plugin.

  We can mechanically fix all the broken contracts, which leads to fewer
  bugs.

  We have fewer bugs in the area of study.

How will we execute the process?

  1. Put the Plug-ins and OJI existing bugs into buckets.

  2. Invent template for describing a contract on paper.

  3. Invent way to make contract descriptions executable.

  4. Define teams of two for discovering contracts.  Each team member must
     be from a different group, IE, Stanley and Xiaobin, or Joe and
     Patrick.  

  4. Break the software down into areas for each team to cover.

  5. Schedule "contract discovery" sessions for each team.  The work
     must be conducted in discrete sessions with definite output from
     each session.

To rigorously define the area of study, start from the oji module and
see what modules interface with oji.  Keep moving out until you get to
the point where the code you're looking at has nothing to do with Java.
Do this graphically.  

[1] http://www.aw.com/cseng/titles/0-201-89542-0/techniques/designByContract.htm
